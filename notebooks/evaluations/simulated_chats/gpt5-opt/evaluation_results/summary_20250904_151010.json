{
  "timestamp": "20250904_151010",
  "metrics": {
    "agent_selection": {
      "average_score": 4.2272727272727275,
      "num_evaluations": 66,
      "num_errors": 0,
      "results": [
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent routing for the task:\n  - Started with PatientHistory to pull stage, biomarkers, treatments, and imaging summaries \u2014 the correct first step for assembling the \u201cfull clinical picture.\u201d\n  - Planned handoff to PatientStatus to synthesize current status, Radiology for imaging context, MedicalResearch for evidence-based prognostic factors and progression patterns, and ReportCreation to assemble the final short report. This sequencing fits the user\u2019s request for prognosis and progression pathways.\n  - When EHR/registry access failed, the orchestrator adapted by requesting a minimal clinical dataset and consulted PatientStatus and Radiology to define their minimal inputs \u2014 good use of specialized agents to clarify data requirements before proceeding.\n\n- Effective use of multiple agents for a complex request:\n  - The plan leverages multiple specialized agents in a sensible order and enforces clear handoff rules (\u201cback to you: Orchestrator\u201d), demonstrating well-structured orchestration.\n\n- Avoidance of unnecessary agents:\n  - Minor overreach: inclusion of ClinicalTrials (even as \u201coptional themes\u201d) and ClinicalGuidelines (solely to acknowledge non-prescriptive scope) isn\u2019t strictly necessary to generate a prognosis/progression report and adds overhead. However, they were framed as optional/acknowledgment, so the impact is limited.\n\n- Process and consent handling:\n  - One procedural misstep was \u201cConfirm defaults\u201d posted by the orchestrator itself before the user explicitly consented, followed by invoking PatientHistory. While this doesn\u2019t reflect poor agent selection per se, it indicates process slippage that could have led to unnecessary agent invocation.\n\nOverall, the orchestrator consistently chose appropriate agents and sequencing for the user\u2019s goal, adapted to missing data by engaging relevant agents to define minimal requirements, and avoided actually running downstream agents without data. Minor unnecessary agent inclusion and a consent/confirmation misstep prevent a perfect score."
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Strengths in agent selection and sequencing:\n  - The orchestrator correctly decomposed the tumor board preparation into specialized steps and routed each to an appropriate agent: PatientHistory (timeline/summary), Radiology (imaging review), PatientStatus (structured clinical snapshot including staging/ECOG/biomarkers), ClinicalGuidelines (evidence-based options), ClinicalTrials (trial matching), and ReportCreation (final package). This is a sensible, multidisciplinary flow that mirrors real tumor board preparation.\n  - It proactively gathered missing inputs (imaging access, trial geography preferences, research focus) and set a clear handoff rule (\u201cback to you: Orchestrator\u201d), which supports effective coordination.\n  - It leveraged multiple agents for a complex task and used the right specialization for complex elements like guidelines and trials.\n\n- Areas for improvement:\n  - Radiology scope was overly narrow (\u201cchest X-ray or CT\u201d), which may not fit all tumor types (e.g., breast MRI, brain MRI, PET/CT, abdominal/pelvic CT). The agent should have been framed to review any relevant imaging modalities referenced in the chart.\n  - There was no explicit Pathology agent to review histopathology, biomarkers, and molecular reports directly. While PatientStatus/PatientHistory can extract these data, a dedicated Pathology review is often central to tumor boards and would strengthen accuracy.\n  - MedicalResearch was included as a default step rather than clearly contingent on need. While not necessarily unnecessary, clarifying it as optional based on case complexity would optimize resource use.\n\nOverall, the orchestrator consistently selected appropriate agents and structured them well, with minor missed opportunities (broader imaging scope and a dedicated pathology review) preventing a perfect score."
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected a sensible set of specialized agents aligned with the user\u2019s request:\n  - PatientHistory to retrieve the required clinical data (biomarkers, stage at diagnosis, treatment history, imaging findings) is appropriate.\n  - PatientStatus to synthesize a concise current-status summary is a reasonable specialization step before document creation.\n  - ReportCreation to build a formatted Word document and handle delivery preferences directly addresses the export requirement.\n- It effectively avoided unnecessary agents:\n  - Radiology was explicitly deferred unless the user can provide actual imaging files, which prevents unnecessary image-interpretation steps.\n  - ClinicalTrials was offered as an optional addition, aligning with the user\u2019s goals without over-invoking agents.\n- The orchestrator gathered key preference details (de-identification, formatting, delivery mode) up front, which supports efficient use of the ReportCreation agent and prevents rework.\n- It showed good routing for a complex, multi-stage task by sequencing data retrieval, clinical summarization, and document generation.\n\nAreas for minor improvement:\n- The PatientStatus summarization might be somewhat redundant, as ReportCreation could potentially integrate summarization; still, the separation is justifiable.\n- If stage at diagnosis or biomarker details are missing from the record, the plan relies on asking the user rather than engaging a staging/oncology rules engine to infer stage from TNM/pathology when available. Incorporating such a specialized staging step when data are present could further optimize expertise use.\n\nOverall, the agent selection and routing are strong and well-justified, with only minor opportunities to tighten specialization and redundancy."
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator identified and sequenced the most relevant specialized agents for the user\u2019s request:\n  - PatientHistory to retrieve the key structured data (biomarkers, stage at diagnosis, treatment history, latest imaging findings) was exactly on target for the data-gathering step.\n  - PatientStatus to synthesize and summarize current status from the retrieved data is an appropriate specialization that enhances clarity and completeness for a tumor board summary.\n  - ReportCreation to produce a formatted Word document is the correct agent for the requested deliverable and formatting needs.\n- It avoided unnecessary agents:\n  - Radiology was explicitly deferred unless imaging files were provided, which is resource-conscious and appropriate.\n  - ClinicalTrials was proposed as optional, not automatically included, avoiding scope creep unless the user wants it; this demonstrates good restraint.\n- It routed the task effectively and logically:\n  - The sequence (history \u2192 status \u2192 optional trials \u2192 report generation) reflects a coherent workflow and leverages each agent\u2019s strengths.\n  - The orchestrator established a clear handoff protocol, ensuring controlled multi-agent coordination.\n- It used multiple agents appropriately:\n  - The combination of a data-retrieval agent, a clinical summarization agent, and a document-generation agent is well matched to the complexity of the request and the final format requirement.\n\nMinor note: While PatientStatus could be seen as potentially redundant since ReportCreation might compile and summarize, using a dedicated clinical summarization agent is justifiable and likely improves accuracy and readability. Overall, the orchestration choices were optimal for the task."
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing were excellent for this task.\n\n- Correct agent matching: The user requested image analysis using an imaging tool, comparison to a radiologist\u2019s report, and a discrepancy summary. The orchestrator selected PatientHistory to retrieve the latest CT/CXR details and the signed report, and Radiology to perform image analysis using the imaging tool. This is precisely the right pairing for the task.\n- Efficient use of agents: No unnecessary agents were invoked. The orchestrator avoided adding generalists or tangential specialists and kept the workflow lean with only PatientHistory and Radiology, then handled the final comparison themselves.\n- Effective handling of complexity: The plan recognized the multi-step nature of the task (data acquisition, image analysis, comparison). It ensured proper inputs (DICOM vs. alternative formats, series selection, contrast phases) and access permissions, which is critical for imaging workflows.\n- Appropriate multi-agent orchestration: The orchestrator used multiple agents where needed and clearly sequenced them: fetch studies/reports (PatientHistory), analyze images (Radiology), then synthesize discrepancies (Orchestrator). They also instructed Radiology to specify which CT series were analyzed, which is operationally important.\n- Input/permission gating: The orchestrator proactively requested the required images, study identifiers, and report texts or system access, preventing wasted agent calls without data.\n\nMinor possible enhancement (not score-limiting): Consider asking Radiology to output findings in a structured, sectioned format aligned to the radiologist\u2019s report (e.g., organ system, laterality, measurement units) to further streamline discrepancy mapping; or using a report-parsing step to structure the radiologist\u2019s text. However, the current plan remains fully appropriate.\n\nOverall, the orchestrator perfectly matched agents to the user\u2019s needs and avoided unnecessary complexity."
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The Orchestrator proposed a sensible chain that maps well to the user\u2019s goal. PatientHistory to retrieve the structured timeline and key clinical data, PatientStatus to synthesize the current clinical summary, and ReportCreation to generate the formatted Word document are all appropriate and well-sequenced for producing a tumor board-ready report. ClinicalTrials is correctly marked as optional and only invoked upon user confirmation.\n- Avoidance of unnecessary agents: The plan is lean, using three core agents plus one optional. One could argue that the Orchestrator could compile the summary without PatientStatus, but delegating to a specialized summarization agent is reasonable given the need for completeness and structured presentation in tumor board contexts. The Orchestrator also sought user confirmation before adding ClinicalTrials, avoiding unnecessary calls.\n- Routing to specialized agents for complex tasks: The use of PatientHistory for data retrieval and ReportCreation for document formatting is apt. PatientStatus is a good choice for synthesizing clinical status. However, the Orchestrator mentioned \u201cdeeper radiology analysis\u201d if imaging files are available but did not include a conditional step for a Radiology/Imaging specialist agent in the plan. Explicitly adding a Radiology agent step when imaging is provided would have been a stronger demonstration of specialized routing.\n- Use of multiple agents when appropriate: The breaking down into retrieval, synthesis, (optional) trials matching, and document creation is appropriate and efficient. The orchestrator also implemented a clear handoff protocol and micro-updates plan.\n\nMinor shortcomings prevent a perfect score: lack of an explicit radiology agent pathway despite inviting imaging uploads, and slight scope creep beyond the user\u2019s minimal request (e.g., ECOG, social history) without explicit confirmation\u2014though the Orchestrator does ask for plan confirmation, mitigating this. Overall, the agent selection is well thought out and efficient, warranting a 4."
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing were excellent for this task.\n\n- It identified PatientHistory as the correct first-line agent to retrieve all pathology and molecular testing\u2014a precise match to the user\u2019s request to \u201cscan all pathology and molecular testing.\u201d\n- It avoided unnecessary agent use. The orchestrator did not prematurely invoke other agents and only queried PatientHistory to confirm input requirements, which is reasonable and low-overhead.\n- It asked the user for essential inputs (patient_id, biomarker list versus \u201cscan all,\u201d scope, and reporting preferences), ensuring the selected agent could operate effectively and that the output would match the user\u2019s needs.\n- It planned to perform the biomarker extraction/summary itself after retrieval, which is appropriate given the available agents described. It also outlined optional escalation to other specialized agents (PatientStatus, ClinicalTrials, ReportCreation) only if the user wanted those additional outputs, showing good restraint and modularity.\n- It maintained clear handoff rules (\u201cback to you: Orchestrator\u201d) and provided micro-updates, demonstrating effective coordination.\n\nOverall, the orchestrator matched the user\u2019s request with the optimal agent, avoided unnecessary complexity, and proposed additional agents only as optional next steps, which aligns with best practices for agent orchestration."
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- Correct agent selection: The orchestrator chose a clear, minimal, and well-targeted set of agents aligned with the user\u2019s request: PatientHistory to pull the comprehensive record for patient_4, PatientStatus to structure key eligibility attributes (tumor type, stage, KRAS mutation status, treatment history, ECOG), and ClinicalTrials to perform the trial-matching with phase and contact details. These precisely map to the user\u2019s criteria.\n- Avoided unnecessary agents: No extraneous agents were introduced. The orchestrator did not overcomplicate the workflow with unrelated modules (e.g., insurance/benefits, care navigation) that were not required for the task.\n- Effective routing to specialized agents: The plan leverages specialization correctly\u2014data retrieval (history), clinical synthesis (status extraction), and domain-specific search (trials). This sequencing fits typical clinical trial matching workflows and ensures that the ClinicalTrials agent receives a structured, eligibility-ready profile.\n- Appropriate multi-agent use for complexity: The orchestrator split the complex task into logical stages, using multiple agents where each adds distinct value. It also identified missing user inputs (location, travel radius, phase preferences, site preferences) and planned to collect them before invoking the ClinicalTrials agent, which is essential for geographic filtering and relevance.\n- Minor potential enhancement (does not lower the score): If KRAS status were not present in the history, an explicit fallback to a molecular/genomics results agent could be mentioned. However, the plan reasonably assumes PatientHistory contains molecular results and that PatientStatus will extract KRAS, so this is not a flaw in agent selection.\n\nOverall, the orchestrator matched the user\u2019s needs with the optimal agents and sequencing, avoided unnecessary complexity, and planned for clarifying inputs, demonstrating excellent agent selection."
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection was excellent and well-aligned with the user\u2019s request:\n- Correct agent choices: It selected PatientHistory to retrieve the patient\u2019s tumor type, stage, KRAS status, treatment history, performance status, and location directly from records; PatientStatus to standardize/summarize those details into a trial-matching profile; and ClinicalTrials to identify active, geographically relevant trials and provide phase and contact information. These are exactly the specialized agents needed for the task.\n- Avoided unnecessary agents: No extraneous agents (e.g., Radiology, Genomics-only, or Pharmacy) were invoked. The chosen trio is minimal yet sufficient for accurate trial matching.\n- Effective routing for complexity: The user\u2019s question spans patient data aggregation, clinical status synthesis, and external trial search\u2014distinct steps that justify multiple specialized agents. The orchestrator sequenced them logically and ensured handoffs.\n- Appropriate use of multiple agents: The intermediate PatientStatus step, while not strictly mandatory, is justified to convert raw chart data into a structured profile optimal for trial eligibility logic, improving precision in ClinicalTrials matching.\n- Proactive clarification: Asking for preferred geographic location/travel radius and KRAS/ECOG specifics upfront (while planning to confirm via PatientHistory) further optimizes the ClinicalTrials query without committing to unnecessary agent calls.\n\nOverall, the orchestrator perfectly mapped the user\u2019s needs to the optimal agents, with no wasted resources and clear coordination."
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator chose appropriate agents for the core tasks. Using PatientHistory to retrieve the latest CT/CXR studies and corresponding radiologist reports is a good first step, and routing CXR image analysis to the Radiology agent (which is validated for CXR) is appropriate.\n- It avoided unnecessary agents, keeping the workflow streamlined with just PatientHistory and Radiology, and reserving the comparison/synthesis step for the orchestrator.\n- The orchestrator effectively managed a complex, multi-step request by sequencing agents and explicitly planning the comparison of AI-generated findings to the radiologist\u2019s reports.\n- It also flagged a key tool limitation (CXR-only validation) and sought clarification and user inputs before proceeding, which is responsible.\n\nMinor missed opportunity preventing a 5:\n- The user explicitly requested CT image analysis; the plan did not route CT images to a CT-capable analysis agent (or a human-in-the-loop radiology read) and instead defaulted to report-based comparison for CT unless the user supplies images, with only \u201climited insights\u201d proposed. If a CT-specific imaging agent exists in the system, the orchestrator should have involved it or at least proposed it explicitly. If no such agent exists, proposing a qualified manual CT review by the Radiology agent (with clear limitations) would better align with the user\u2019s request.\n- The plan could have specified a dedicated discrepancy-checking step/agent if available, though handling it at the orchestrator level is acceptable.\n\nOverall, agent selection was consistently appropriate and efficient, with a small gap around CT analysis routing."
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, well-sequenced plan that maps appropriately to the task of preparing a tumor board: retrieving comprehensive history (PatientHistory), synthesizing current status (PatientStatus), then leveraging specialized expertise for guideline-based recommendations (ClinicalGuidelines) and trial matching (ClinicalTrials), with conditional radiology review (Radiology) and final document assembly (ReportCreation). This demonstrates effective routing to specialized agents and a logical workflow.\n- It avoided unnecessary agent use by keeping Radiology contingent on the availability of imaging and by not prematurely invoking multiple agents before confirming user inputs.\n- The orchestrator also demonstrated good moderation by clarifying objectives, requesting additional materials (imaging, pathology PDFs), and asking for specific focus areas and timelines\u2014this helps ensure subsequent agent use is targeted.\n- Missed opportunities: For a tumor board, pathology is often central. Although the plan requests pathology PDFs, it does not explicitly include a Pathology or Molecular/Genomics agent to interpret detailed reports or biomarker data beyond what PatientStatus might summarize. Including a dedicated Pathology/Molecular agent when pathology or NGS reports are available would strengthen the plan. Depending on the case, specialty agents (e.g., Surgical Oncology or Radiation Oncology decision support) might also be warranted if resectability or local therapy is a key question.\n- Overall, agent selection and sequencing were strong and efficient with minor gaps, hence a score of 4 rather than 5."
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator correctly identified and engaged the appropriate specialized agents for the task:\n  - PatientHistory to retrieve the latest CT and CXR study metadata, image links, and full radiologist reports.\n  - Radiology to perform AI analysis on the CXR, explicitly noting this agent\u2019s scope is limited to chest X-rays.\n- It avoided unnecessary agents and did not attempt to shoehorn CT analysis into an agent that isn\u2019t capable of it. Instead, it transparently acknowledged the limitation for CT and proposed a report-only comparison while inviting the user to provide a CT-capable tool if available.\n- The routing of tasks was logical and efficient for a multi-step, multi-modality request: first gather the required inputs (PatientHistory), then run the modality-specific AI analysis (Radiology for CXR), and finally synthesize findings and discrepancies.\n- It used multiple agents appropriately for different components of the workflow and kept the orchestration clear, including a standard handoff phrase to maintain coordination.\n- The plan balances capability with constraints, ensures data acquisition before analysis, and avoids redundant or irrelevant agent usage."
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": "patient_4",
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator correctly identified that the user\u2019s question required both general evidence on adagrasib (benefits/risks and prognosis impact) and, ideally, patient-specific context. It appropriately started with PatientHistory to retrieve the patient\u2019s data and then PatientStatus to structure it, which are the right agents to enable a tailored ClinicalGuidelines response.\n- When PatientHistory initially failed to retrieve the record, the orchestrator routed to MedicalResearch for a general evidence overview so the user could gain immediate value. This was an effective use of a specialized research agent while awaiting clinical details.\n- After PatientHistory later produced a detailed timeline, the orchestrator efficiently collected missing critical items (ECOG, CNS status, pertinent labs, and medications relevant to QT risk and drug interactions) by calling PatientHistory again and then looping back to PatientStatus. This was an appropriate and targeted use of agents to ensure ClinicalGuidelines could provide a safe, personalized discussion of benefits/risks and prognosis.\n- The orchestrator avoided using unnecessary agents prematurely. Although it proposed ClinicalTrials, Radiology, and ReportCreation in the plan, it did not invoke them before they were needed; it kept them optional and contingent on user interest or available data.\n- It also attempted a comparative evidence query (adagrasib vs sotorasib) via MedicalResearch. While not strictly required to answer the user\u2019s immediate question, this is a reasonable step to enhance clinical decision-making and is still within the scope of specialized evidence retrieval.\n- Minor inefficiencies kept this from being a perfect 5:\n  - The plan was somewhat expansive, listing several optional agents that were not directly requested. While the orchestrator did not overuse them, the breadth could introduce unnecessary complexity.\n  - The additional MedicalResearch comparative query encountered a tool error; while not the orchestrator\u2019s fault, it didn\u2019t add value and slightly extended the workflow.\n  - The orchestrator repeated micro-updates and summaries, which, while clear, could be more concise.\n\nOverall, the orchestrator consistently chose appropriate agents, sequenced them logically, and largely avoided unnecessary usage, earning a solid \u201cGood\u201d rating."
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- Correct agent selection:\n  - PatientHistory is the right first step to retrieve the requested data (biomarkers, stage, treatments, imaging summaries).\n  - ReportCreation is appropriate to produce a formatted Word document for tumor board use.\n  - Conditional use of Radiology is sensible if the user provides imaging files.\n\n- Unnecessary or suboptimal agent usage:\n  - Radiology was still slated to \u201cacknowledge lack of images\u201d even if none are provided. This is unnecessary; Radiology should be invoked only if images are available.\n  - PatientStatus, while potentially helpful for a concise snapshot, goes beyond the user\u2019s explicitly requested sections and could be optional rather than a mandatory step.\n  - ClinicalGuidelines, ClinicalTrials, and MedicalResearch were included as steps to \u201cacknowledge readiness,\u201d but the user did not request guidance, trials, or literature. Including them in the workflow adds complexity without value for the stated goal.\n\n- Effective routing:\n  - The orchestrator appropriately planned to gather data first and then compile the report, and asked relevant clarifying questions (image availability, document format).\n  - However, it missed an opportunity to streamline by omitting nonessential agents unless the user opted in.\n\nSuggestions to improve:\n- Limit the plan to PatientHistory \u2192 (optional) PatientStatus \u2192 ReportCreation.\n- Invoke Radiology only if the user uploads imaging files or explicitly requests image re-interpretation.\n- Do not involve ClinicalGuidelines, ClinicalTrials, or MedicalResearch unless the user asks for those additions."
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The orchestrator laid out a clear, logical workflow that maps well to the typical tumor board preparation process. It starts with PatientHistory to gather the foundational data, then routes to Radiology for imaging synthesis, compiles a consolidated PatientStatus, and then leverages ClinicalGuidelines and ClinicalTrials for evidence-based options and trial matching. It concludes with ReportCreation to assemble the tumor board packet and optionally MedicalResearch for nuanced literature support. This sequencing and agent choice are well aligned with the task.\n- Efficient use of agents: No obvious unnecessary agents were invoked. Each selected agent has a direct, relevant role in the tumor board preparation. The inclusion of MedicalResearch as optional is a prudent way to avoid unnecessary use while allowing depth when needed.\n- Handling complexity: The orchestrator effectively decomposed a complex, multidisciplinary task and proposed routing to specialized agents. It also anticipated data gaps (e.g., imaging availability) and instructed agents to request missing inputs, which is appropriate for a clinical workflow.\n- Missed opportunities: The main gap is the lack of a dedicated Pathology/Oncopathology agent. Tumor boards typically require expert synthesis of pathology (histology, grade, margins, molecular profiling). While PatientStatus can extract histology/biomarkers from PatientHistory and the orchestrator asks the user to upload pathology reports, a specialized Pathology agent would better validate and interpret these findings, especially for complex molecular data. Including such an agent before PatientStatus would likely improve fidelity. Additionally, Radiology is set to review imaging \u201cfrom PatientHistory,\u201d which is acceptable, but an ImagingRetrieval step (if available) could have been explicitly invoked to ensure access to raw DICOMs and prior studies.\n- Overall: The orchestration is strong and well structured, with a minor missed opportunity in not engaging a dedicated Pathology agent. Hence, a rating of 4 (Good) is warranted."
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Appropriate agent selections:\n  - Good choices: PatientHistory (to retrieve the structured data needed), and ReportCreation (to generate the formatted Word document) directly address the user\u2019s request.\n  - Conditionally appropriate: Radiology could be useful if actual imaging files are provided; otherwise, extracting the latest imaging findings from the existing radiology report via PatientHistory or within ReportCreation would suffice.\n\n- Unnecessary agents included:\n  - ClinicalGuidelines, ClinicalTrials, and MedicalResearch expand the scope beyond what the user requested (a diagnostic summary and Word export). These add overhead without clear benefit for the stated task and risk diluting focus.\n  - Radiology is automatically included even when images may not be available; having it \u201cnote limitations\u201d in that case is an avoidable step since the necessary imaging findings can be summarized from the report text.\n\n- Missed opportunities vs. complex routing:\n  - The task does not require complex multi-agent routing beyond retrieving structured patient data and compiling a report. Adding guideline summaries, trial categories, and literature evidence isn\u2019t necessary here. A leaner sequence (PatientHistory \u2192 optional Radiology if images are provided \u2192 ReportCreation) would be optimal.\n  - PatientStatus is arguably redundant because ReportCreation could synthesize the status directly from PatientHistory output. Including it is not harmful but not essential.\n\n- Use of multiple agents where appropriate:\n  - The orchestrator did use multiple agents, but it overused them. It did not tailor the agent selection to the minimal set required by the user\u2019s request, thereby reducing efficiency.\n\nOverall, while the orchestrator included the key agents needed, it selected several unnecessary agents and did not conditionally route Radiology based on the availability of imaging files. This reflects below-average agent selection for the specific user request."
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- Appropriate selections:\n  - The orchestrator correctly identified that a KRAS p.G12C treatment summary benefits from specialized inputs and routed the task to relevant agents: ClinicalGuidelines (for standard-of-care options like KRAS inhibitors and chemo-immunotherapy), ClinicalTrials (for emerging drugs), and MedicalResearch (for current efficacy/safety data and implications for prognosis). These choices align well with the user\u2019s request.\n  - Including PatientHistory and PatientStatus can be justified since the query references \u201cpatient_4,\u201d and the optimal recommendations depend on primary tumor type (e.g., NSCLC vs CRC), stage, ECOG, prior therapies, and co-mutations.\n\n- Missed opportunities / unnecessary agents:\n  - Radiology was unnecessary for this query; the user did not ask for imaging interpretation, and radiology insights are not essential to summarizing KRAS-targeted options and risk profiles.\n  - ReportCreation seems redundant; the orchestrator could synthesize outputs into a concise summary without a separate agent. This adds overhead without clear value for the user\u2019s immediate question.\n  - The plan adds process complexity (micro-updates after each agent, strict handoff phrasing) that does not enhance agent selection or the clinical answer and risks delaying delivery.\n  - If the patient record were unavailable, the orchestrator did not outline a fallback path to provide a general KRAS p.G12C summary\u2014this could stall progress unnecessarily.\n\n- Additional considerations:\n  - While PatientHistory/Status are reasonable, the orchestrator could have first asked a minimal set of critical disambiguation questions (primary cancer type, prior lines, PD-L1, co-mutations like STK11/KEAP1, CNS involvement) or proceeded with a general summary while flagging where patient-specific factors would modify choices.\n  - A dedicated toxicity/pharmacology or precision oncology agent could have been considered to deepen the risk profile and resistance discussion, but this is largely covered by ClinicalGuidelines and MedicalResearch.\n\nOverall, the orchestrator generally selected appropriate core agents for the substance of the task but over-orchestrated with unnecessary agents and process steps, missing a chance to streamline and provide immediate value."
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection and sequencing: The orchestrator laid out a logical workflow for tumor board preparation\u2014PatientHistory \u2192 PatientStatus \u2192 Radiology \u2192 ClinicalGuidelines \u2192 ClinicalTrials \u2192 ReportCreation \u2192 MedicalResearch. This sequence sensibly builds dependencies (history first, then status, then evidence-based considerations and trials, culminating in a compiled report with research context). It also explicitly ensures each agent yields back to the orchestrator, which supports effective coordination.\n- Effective routing to specialized agents: The plan leverages specialized agents where appropriate: Radiology for imaging, ClinicalGuidelines for guideline-based options, ClinicalTrials for trials matching, and MedicalResearch for recent literature highlights. This demonstrates an understanding of how to route complex aspects to domain-specific expertise.\n- Avoidance of unnecessary agents: The set of agents chosen is lean and relevant to a standard tumor board workflow. ReportCreation is appropriate given the user\u2019s deliverable request. MedicalResearch, while not always mandatory, is reasonable in a tumor board context to surface evolving standards and key studies.\n- Good pre-checks and input gathering: The orchestrator proactively requested missing inputs (confirm patient ID, imaging availability/upload, trial geography, research focus, report format preferences), which helps avoid misrouting and wasted agent calls.\n- Minor missed opportunities: \n  - Pathology review is central to tumor boards; while histology and biomarkers are captured under PatientStatus, a dedicated Pathology agent (if available) could have been included or at least a request for pathology reports/slides/IHC/molecular PDFs or images should have been made. This is a small gap in agent selection for comprehensive tumor board prep.\n  - Radiology step was framed around chest X-ray first; most tumor boards rely more on CT/MRI/PET. Although the orchestrator noted \u201cand other images if provided,\u201d explicitly broadening the request beyond chest X-ray would better align with typical oncology imaging needs.\n\nOverall, the orchestrator generally selected and sequenced the right agents, avoided unnecessary ones, and routed tasks to specialists effectively, with minor improvements possible around pathology and broader imaging scope."
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected appropriate agents for the task:\n  - PatientHistory to retrieve the latest CT and CXR studies along with the full radiologist reports and image access details.\n  - Radiology to perform the AI analysis of the images.\n  - Orchestrator to perform the synthesis and comparison of AI findings against the radiologist\u2019s report.\n- It avoided unnecessary agents and kept the workflow streamlined, which is appropriate for this request.\n- It effectively routed the image-interpretation work to the specialized Radiology agent and retained the comparison/synthesis step at the orchestrator level, which is sensible.\n- The plan explicitly requested all needed inputs (images, reports, dates, priors) and defined clear handoffs, which supports efficient use of specialized capabilities.\n\nMinor shortcomings preventing a 5:\n- The user explicitly requested using \u201cthe imaging tool,\u201d but the plan did not explicitly instruct the Radiology agent to use that specific tool or invoke a dedicated imaging tool agent if one exists in the ecosystem. It is implied the Radiology agent will analyze the images, but explicit tool invocation could improve alignment with the user\u2019s request.\n- The directive to \u201cprioritize CXR analysis\u201d is unnecessary given the user asked for both CT and CXR; it could risk under-emphasizing the CT if resources are constrained.\n- Requesting user confirmation before proceeding is process-safe but adds friction; not directly an agent-selection issue, yet it delays execution without improving agent choice.\n\nOverall, the orchestrator\u2019s agent selection was solid and well-targeted, with only minor opportunities to make the tool usage explicit and align priorities exactly with the user\u2019s ask."
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, stepwise plan that aligns well with standard tumor board workflows and appropriately leveraged multiple specialized agents: PatientHistory, PatientStatus, Radiology, ClinicalGuidelines, ClinicalTrials, MedicalResearch, and ReportCreation. This is a strong match to the user\u2019s request to prepare a tumor board package.\n- It effectively gated the process by requesting essential inputs (imaging files vs reports, pathology/NGS PDFs, redaction needs) before invoking agents, which helps avoid wasted effort and ensures the right agents have the necessary data.\n- The sequence is generally logical: gather history, synthesize status, then consult Radiology, followed by guidelines, trials, and research, culminating in a report. This demonstrates thoughtful orchestration and use of multiple agents for a complex task.\n- It avoided unnecessary agents and stuck to those with clear roles for tumor board preparation.\n- Minor missed opportunities prevent a perfect score:\n  - There was no dedicated Pathology/Molecular agent despite explicitly asking for pathology/NGS documents. A specialized pathology/genomics agent could parse IHC/NGS/FISH and provide a more accurate pathologic/molecular synopsis for tumor board.\n  - Building PatientStatus before Radiology input might necessitate later revisions; often radiology and pathology inform the definitive current disease status (e.g., RECIST, response, sites of disease). A plan to update PatientStatus after Radiology would be ideal.\n- Despite these small gaps, the orchestrator\u2019s agent selection and routing were consistently appropriate and well-coordinated for the task."
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected a sensible and well-sequenced set of agents aligned with the user\u2019s goals:\n  - PatientHistory to retrieve key clinical details (stage at diagnosis, biomarkers, treatment history, imaging narratives).\n  - PatientStatus to synthesize a concise current snapshot for tumor board.\n  - Radiology to extract definitive \u201clatest imaging findings,\u201d with a contingency plan if DICOM/report assets are unavailable.\n  - ReportCreation to generate a formatted Word document tailored for a tumor board presentation.\n- It avoided unnecessary agent use and explicitly made the ClinicalTrials agent optional, asking the user whether to include it rather than invoking it by default.\n- The orchestrator gathered critical inputs (imaging files/reports, ECOG, and formatting preferences), which is appropriate for enabling specialized agents (especially Radiology and ReportCreation) to perform well.\n- Clear handoff protocol (\u201cback to you: Orchestrator\u201d) demonstrates structured coordination and proper routing between agents.\n\nOpportunities for improvement (preventing a perfect score):\n- A dedicated Pathology/Biomarker agent could have been included to ensure high-fidelity extraction of biomarker and histology details from pathology sources, rather than relying solely on PatientHistory\u2019s broad scope.\n- The PatientStatus step may be somewhat redundant, as ReportCreation could synthesize the current status directly from PatientHistory; however, it is still reasonable for clarity and modularity.\n\nOverall, agent selection and routing were strong, with minor missed opportunities for leveraging a specialized pathology/biomarker agent."
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator demonstrated a strong, well-structured plan that aligns with typical tumor board workflows and effectively leveraged multiple specialized agents. The sequence\u2014PatientHistory \u2192 PatientStatus \u2192 Radiology \u2192 ClinicalGuidelines \u2192 ClinicalTrials \u2192 MedicalResearch \u2192 ReportCreation\u2014shows thoughtful routing from data gathering to synthesis and final reporting.\n- It appropriately asked the user for key materials (imaging, pathology, biomarkers, labs, ECOG), showing awareness of dependencies and potential data gaps, and planned to prompt for missing information. This supports effective agent utilization without unnecessary steps.\n- The selection of Radiology for imaging review, ClinicalGuidelines for standard-of-care options, ClinicalTrials for trial matching, and MedicalResearch for tailored evidence synthesis demonstrates good use of specialization and routing of complex questions to the right agents.\n- It avoided unnecessary agents and did not invoke any irrelevant services, keeping the workflow focused and efficient.\n- Missed opportunity: A dedicated Pathology (and/or Molecular/Genomics) agent was not included. For tumor board preparation, a pathology review\u2014interpretation of histology, grading, margins, and molecular alterations\u2014is typically central. While PatientStatus intends to compile histology/biomarker data, that does not fully substitute for a specialized pathology/genomics interpretation step. Including such an agent would likely improve completeness and accuracy.\n- Optional but potentially valuable: a toxicity/pharmacy or supportive care agent could be considered depending on case complexity, though not strictly necessary at the planning stage.\n\nOverall, the orchestrator\u2019s agent selection was consistently appropriate and well-coordinated, with one notable gap (pathology/genomics). Hence, a rating of 4."
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, sensible routing for a complex, prognosis-focused request. It planned to use:\n  - PatientHistory to retrieve the timeline and context;\n  - Radiology to interpret recent imaging or reports;\n  - PatientStatus to synthesize stage, biomarkers, ECOG, and treatment response;\n  - ClinicalGuidelines and MedicalResearch to frame prognostic factors and progression pathways with authoritative and up-to-date context;\n  - ReportCreation to compile the final concise report.\n  This division of labor appropriately leverages specialized agents and demonstrates good routing for a complex clinical synthesis.\n\n- It consistently avoided prescriptive treatment recommendations and sought necessary confirmations (patient ID, imaging availability, permissions, focus/time horizon) before engaging agents, which is appropriate for medical workflows and data governance.\n\n- However, it repeatedly included a ClinicalTrials agent to outline trial landscapes. That agent is not necessary for the user\u2019s stated goal (prognosis and progression pathways), and its inclusion adds scope creep and unnecessary resource usage. This is the main missed opportunity.\n\n- Minor optimization opportunities: ClinicalGuidelines and MedicalResearch could have been consolidated or sequenced more tightly to avoid redundancy, and a dedicated pathology/biomarker extraction agent might have been considered if biomarker details are complex (though PatientStatus could reasonably cover this).\n\n- Overall, the orchestrator\u2019s agent selection and sequencing were well matched to the task with one notable unnecessary agent. Hence, a \u201cGood\u201d rating."
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator appropriately decomposed the complex \u201cprepare tumor board\u201d request into a logical multi-agent workflow. It selected relevant agents for each phase:\n  - PatientHistory to gather a structured timeline and chart data\n  - PatientStatus to synthesize key oncologic variables (staging, histology, biomarkers, ECOG)\n  - Radiology for imaging review with a conditional plan based on image availability\n  - ClinicalGuidelines for evidence-based treatment options\n  - ClinicalTrials for trial matching\n  - MedicalResearch as an optional add-on for targeted literature\n  - ReportCreation to produce a tumor board-ready document\n- It avoided unnecessary agents by:\n  - Making ClinicalGuidelines and ClinicalTrials sections contingent on user preference\n  - Clearly flagging MedicalResearch as optional\n  - Conditioning Radiology\u2019s deeper analysis on actual image availability\n- It effectively routed the complex, multi-domain task to specialized agents in a sensible order, and enforced handoffs (\u201cback to you: Orchestrator\u201d) to maintain coordination.\n- It used multiple agents where appropriate for a tumor board, aligning with typical multidisciplinary inputs.\n\nAreas for improvement preventing a perfect score:\n- Pathology review is central to tumor boards (histopathology details, margins, molecular panel verification); no dedicated Pathology/Genomics agent was invoked. While PatientStatus may extract biomarkers from notes, a specialized pathology or molecular review step (if available) would improve rigor.\n- The plan could more explicitly solicit or route to additional specialties often needed (e.g., Surgical Oncology or Radiation Oncology consult summaries) and explicitly capture supportive care/toxicity and organ function labs, though these may be encompassed by PatientHistory/Status.\n- Minor redundancy risk between PatientHistory and PatientStatus could be streamlined, but this modularity is reasonable.\n\nOverall, the orchestrator\u2019s agent selection and routing were strong and resource-conscious, with just a few missed opportunities for specialty inclusion."
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection:\n  - PatientHistory is the right first step to pull diagnoses, stage at diagnosis, histology, biomarkers, treatments, and imaging report excerpts\u2014directly aligned with the user\u2019s request.\n  - PatientStatus to synthesize a concise clinical summary from the retrieved history is reasonable and can improve downstream consistency, though it could be considered optional since ReportCreation could perform this synthesis. Still, this is a sensible use of specialization rather than a misstep.\n  - Radiology was conditionally invoked only if imaging files are provided; otherwise, it defers to the chart\u2019s imaging reports. This is an appropriate and efficient routing decision that avoids unnecessary use of the Radiology agent when images aren\u2019t available.\n  - ReportCreation for assembling a formatted Word document is exactly what the user requested and is a necessary and well-matched choice.\n\n- Avoidance of unnecessary agents:\n  - ClinicalTrials and MedicalResearch were included in the proposed plan even though the user did not request them. However, the orchestrator explicitly asked the user whether to include these sections before proceeding. This mitigates the risk of unnecessary agent usage, though listing them outright in the plan (rather than marking them explicitly as optional) represents mild scope creep.\n\n- Effective routing of complex tasks:\n  - The orchestrator laid out a clear, logical sequence with data dependencies, ensured agents would hand off back to the orchestrator, and requested missing inputs (imaging files, templates) to enable optimal analysis. This demonstrates strong coordination and awareness of specialized roles.\n\n- Use of multiple agents appropriately:\n  - The multi-agent plan is justified for a structured EHR retrieval, synthesis, optional imaging analysis, and final document generation. The only small drawback was preemptively adding trial and literature agents without an explicit initial user request\u2014albeit with consent sought.\n\nOverall, the orchestrator consistently matched tasks to suitable specialized agents and handled dependencies well. A small deduction is warranted for potential overreach with ClinicalTrials and MedicalResearch being placed in the plan before user confirmation."
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected a logical, well-sequenced set of agents for the user\u2019s request:\n  - PatientHistory to pull the longitudinal record, including stage at diagnosis, biomarkers, treatments, and imaging reports.\n  - PatientStatus to transform outputs into a concise, structured clinical status\u2014useful for tumor board summaries.\n  - Radiology to deliver specialized imaging interpretation when images or official reports are available, with a sensible fallback to PatientHistory extraction when not.\n  - ReportCreation to produce the requested formatted Word document for tumor board presentation.\n- It avoided unnecessary agents and treated ClinicalTrials as optional, seeking user confirmation before invoking it\u2014this shows restraint and alignment with the user\u2019s explicit scope while still offering value that is often relevant for tumor boards.\n- It effectively routed specialized components (imaging) to a Radiology agent rather than having general agents attempt interpretation, demonstrating appropriate use of specialized expertise.\n- The plan included clear handoffs and dependency management among agents, as well as a sensible request for user-provided assets (imaging files, biomarker reports, formatting preferences).\n\nMinor missed opportunity:\n- For a comprehensive diagnostic summary emphasizing biomarker status and staging, a dedicated Pathology/Biomarker parsing agent (if available) could have been included to ensure high-fidelity extraction and interpretation of pathology and molecular reports. Relying on PatientHistory to capture these details may be sufficient but is less specialized than a pathology/molecular agent would be.\n\nOverall, the agent selection was strong and efficiently tailored to the request, with only a small potential improvement in leveraging a pathology/molecular specialist."
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The orchestrator chose PatientHistory to retrieve the latest CT/CXR studies and radiologist reports and Radiology to perform AI image analysis with the imaging tool. This matches the user\u2019s request and leverages the right specialized capabilities.\n- Avoided unnecessary agents: Only two agents were involved (PatientHistory and Radiology), which is lean and appropriate for the task. No superfluous agents were introduced.\n- Routing to specialized agents: The imaging analysis was routed to the Radiology agent, which is correct for tool-driven image interpretation. The Orchestrator retained responsibility for comparing AI findings to the radiologist\u2019s report, which is reasonable.\n- Use of multiple agents for a complex task: The plan correctly split data retrieval and image analysis across two agents and reserved synthesis/comparison for the Orchestrator, which is a sensible division of labor.\n\nAreas for improvement:\n- Minor sequencing inconsistency: The proposed participation order lists PatientHistory first (retrieve images/reports), then Radiology. However, the micro-update states the Orchestrator would first ask Radiology to confirm input requirements before sending PatientHistory to fetch the data. This mismatch could create avoidable delays or confusion. A consistent sequence\u2014authorize access, have PatientHistory fetch the latest studies and reports, then pass them to Radiology\u2014would be cleaner.\n- Potentially unnecessary capability confirmation: Asking Radiology to confirm CT analysis capability may be redundant if the Radiology agent is known to handle both CT and CXR. If there\u2019s uncertainty, the confirmation is justified; otherwise it adds a step without value.\n\nOverall, the agent selection was sound and efficient, with only minor process/ordering inefficiencies preventing a top score."
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- Correct agent selection: The orchestrator mapped each component of the user\u2019s request to the most appropriate specialist agents:\n  - PatientHistory to retrieve structured chart data (biomarkers, staging, treatments, imaging report text).\n  - PatientStatus to synthesize a concise current status summary from the retrieved history.\n  - Radiology conditionally, only if actual imaging files are available; otherwise rely on imaging report text.\n  - ReportCreation to generate a tumor-board-ready Word document, including the requested sections and returning a .docx file.\n- Avoided unnecessary agents: It explicitly avoided ClinicalGuidelines since no recommendations were requested and deferred ClinicalTrials/MedicalResearch as optional only if the user later wants them, preventing scope creep.\n- Effective routing of complex tasks: The orchestrator recognized the potential complexity of imaging review and appropriately gated Radiology use on the availability of image files, which is exactly how to leverage specialized expertise without waste.\n- Appropriate multi-agent use: The plan uses multiple agents in a complementary way\u2014data retrieval, synthesis, and document generation\u2014without redundancy. Including PatientStatus adds value by producing a clean current summary for the final report rather than overburdening ReportCreation with all synthesis.\n\nOverall, the orchestrator\u2019s agent selection and sequencing were well-matched to the task, conditionally leveraged specialized agents, and avoided unnecessary ones."
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The orchestrator correctly chose PatientHistory as the primary agent to retrieve pathology and molecular testing data from the record, which aligns with the user\u2019s request. It then kept the analysis/synthesis step within the orchestrator, which is reasonable for generating a presence/absence summary of specific biomarkers.\n- Avoidance of unnecessary agents: It deliberately limited agent use to the minimal set and did not invoke PatientStatus or ReportCreation unless requested, avoiding unnecessary resource use.\n- Routing for complexity: The task is mainly data retrieval and structured summarization. The orchestrator clarified inputs (patient ID, target biomarkers, preferences) and planned a clean handoff, including explicit \u201cback to you\u201d instructions, demonstrating solid orchestration discipline.\n- Multi-agent use when appropriate: It anticipated optional downstream needs (current status summary, report generation) and reserved those for user opt-in, which is appropriate. \n\nMinor missed opportunity preventing a 5:\n- If a specialized document-ingestion or pathology/biomarker extraction agent exists, the plan didn\u2019t mention leveraging it (especially for uploaded reports). The orchestrator chose to \u201cscan\u201d results itself instead of using a dedicated NLP/extraction agent, which could improve accuracy and scalability. \n\nOverall, the agent selection was consistently appropriate and efficient, with only a small potential optimization left on the table."
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing were excellent for the user\u2019s request to identify active clinical trials for patient_4:\n\n- It selected the right specialized agents in a logical sequence:\n  - PatientHistory to retrieve structured clinical details (tumor type, stage, KRAS mutation specifics, prior therapies, ECOG, and any location already in the record).\n  - PatientStatus to normalize and summarize key eligibility-defining elements for downstream use (this helps ensure consistent fielding and reduces errors when matching).\n  - ClinicalTrials to perform the actual trial matching and return trials with phase and contact information.\n- It avoided unnecessary agents. No extraneous safety, pharmacology, or general medical counseling agents were invoked.\n- It effectively routed a complex, multi-constraint task to the appropriate specialized agents, ensuring each agent had the inputs needed. It also requested critical missing inputs from the user (geographic location, travel radius, trial preferences), which are essential for accurate trial matching.\n- It coordinated multi-agent workflow appropriately, including a clear handoff rule (\u201cback to you: Orchestrator\u201d), validation of structured outputs, and milestone updates, which is important for complex, multi-step tasks.\n\nMinor note: One could argue that PatientStatus might be optional if ClinicalTrials can parse raw history, but in practice, a standardized summary improves reliability. Overall, the agent selection and orchestration were well-matched to the task."
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator selected a well-targeted set of agents for the user\u2019s request. Retrieving the patient\u2019s detailed clinical record (PatientHistory), synthesizing a succinct eligibility-relevant summary (PatientStatus), and then conducting a tailored trial match with contact details (ClinicalTrials) directly map to the user\u2019s requirements (tumor type, stage, KRAS status, treatment history, and geography).\n- The sequence is logical and efficient: first gather complete data, then summarize key eligibility drivers, then query active trials. This avoids redundant or premature trial searches before confirming critical variables (e.g., KRAS mutation specifics, ECOG, prior lines of therapy).\n- The orchestrator appropriately requested missing inputs from the user (geographic home base and travel radius, site preferences, recent updates). This is crucial for accurate trial matching and demonstrates effective routing of a complex question to specialized agents with necessary context.\n- No unnecessary agents were invoked; the chosen three are sufficient and well-scoped for the task. The orchestrator avoided overcomplicating the workflow with tangential agents (e.g., insurance/authorization) that are not required at this stage.\n- The plan to have each agent yield back control ensures coordination and prevents agent overlap or confusion, reflecting good orchestration discipline.\n- Minor potential enhancements (not required for a 5): explicitly confirming KRAS variant/subtype (e.g., G12C vs non-G12C) if not already captured by PatientStatus, or clarifying willingness for international travel. However, these are likely encompassed by PatientStatus and the geography prompt.\n\nOverall, the orchestrator perfectly matched the request with the optimal agents and sequencing, efficiently leveraging specialized capabilities."
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected generally appropriate agents for the task:\n  - PatientHistory to retrieve study metadata and reports.\n  - Radiology to analyze the images.\n  - Orchestrator to perform the comparison and summarize discrepancies.\n- It avoided unnecessary agents and kept the workflow streamlined.\n- It showed good foresight in clarifying scope (patient ID, CT type) and data accessibility, which is essential before invoking agents that require image access.\n- It recognized modality-specific capabilities, noting Radiology is optimized for CXR and conditionally for CT, and planned to default to the official CT report if tool access is limited.\n\nAreas for improvement preventing a 5:\n- PatientHistory was tasked with retrieving links/attachments to actual images, which may be outside a typical \u201chistory\u201d agent\u2019s scope; a dedicated Imaging/PACS retrieval agent would be more precise if available.\n- The plan hedged on CT analysis capability rather than explicitly routing CT to a CT-capable radiology agent (if such specialization exists) or an imaging-tool agent, which could risk not fully meeting the user\u2019s request to analyze CT \u201cusing the imaging tool.\u201d\n- The orchestrator did not explicitly ensure the imaging tool integration step (e.g., an ImageLoader/Viewer agent) beyond Radiology \u201cusing the provided images,\u201d which could be a missed opportunity to guarantee tool-based analysis.\n\nOverall, the agent selection and sequencing were solid and resource-conscious, with minor missed opportunities to leverage more specialized retrieval or CT analysis pathways."
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, dependency-aware workflow that fits the user\u2019s request to prepare a tumor board: start with PatientHistory to gather the full chart, derive PatientStatus, bring in Radiology if imaging is available, then consult ClinicalGuidelines, identify ClinicalTrials, and finally compile the report via ReportCreation. This sequencing is appropriate and leverages specialized agents in a logical order.\n- It effectively limited unnecessary agents. Optional steps (ClinicalGuidelines and MedicalResearch) were explicitly framed as conditional based on user preference or available data, showing resource-conscious planning.\n- The orchestrator solicited key missing inputs (imaging/pathology reports, ECOG, biomarkers, prior therapies, institutional template, deadlines) and established a handoff rule, which supports smooth coordination and ensures each specialized agent contributes at the right time.\n- One missed opportunity was the absence of a dedicated Pathology (and potentially Genomics/Molecular) agent. For a tumor board, a specialist agent to parse and synthesize biopsy/cytology details (grade, margins, receptor status, IHC, PD-L1, MSI, TMB, NGS variants) would add rigor beyond what PatientStatus can infer from history. The orchestrator did ask for pathology reports but did not plan a specialized agent to interpret them.\n- Minor additional opportunities include a Labs/OncologyToxicity agent to trend CBC/CMP and tumor markers where relevant, though this is less critical than a pathology/genomics module.\n- Overall, the plan is strong, makes good use of specialized agents, and avoids unnecessary ones, with a small deduction for not explicitly routing pathology/genomics interpretation to a specialized agent.\n\nThus, the selection and routing were consistently appropriate and efficient, with minor omissions preventing a perfect score."
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator selected the most appropriate agents for the task:\n  - PatientHistory to retrieve the latest CT and CXR studies, associated metadata (dates, accession numbers), direct links suitable for imaging analysis, and the finalized radiology reports. This is exactly the prerequisite dataset needed for image analysis and comparison.\n  - Radiology to use the imaging tool for analyzing CXR and CT and directly compare AI-generated findings against the radiologist\u2019s report, which aligns perfectly with the user\u2019s request.\n- It avoided unnecessary agents. There was no redundant use of NLP/report-parsing or additional QA agents; the Radiology agent can parse and compare to the report as part of its domain expertise. No superfluous specialized sub-agents (e.g., separate CT vs. CXR agents) were introduced when a single Radiology agent could handle both modalities effectively.\n- It effectively routed a complex, multi-step request to specialized agents in the right sequence: first data acquisition (PatientHistory), then domain analysis and comparison (Radiology), then summarization (Orchestrator).\n- The plan accounts for practical constraints (e.g., \u201cif CT images are available in a viewable format\u201d), indicating appropriate handling of imaging tool capabilities.\n- While it requested user confirmation and availability of data before proceeding, this does not detract from agent selection quality; it\u2019s a reasonable step to ensure access. The orchestrator also enforced a clear handoff protocol (\u201cback to you: Orchestrator\u201d) to maintain control flow.\n\nOverall, the agent selection and routing were optimal for the user\u2019s goals, leveraging specialized capabilities without unnecessary complexity."
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator identified the right core agents for the user\u2019s question: ClinicalGuidelines to articulate benefits/risks and MedicalResearch to supply evidence and expected outcomes for adagrasib in KRAS G12C. This is an appropriate, specialized routing for the core task.\n- It sensibly recognized that patient-specific tailoring could be valuable and, in that case, proposed using PatientHistory and PatientStatus to contextualize stage, prior therapies, ECOG, and comorbidities\u2014information that can materially affect the risk/benefit assessment and prognosis discussion. This demonstrates good judgment in scaling complexity based on available details.\n- It offered ClinicalTrials as optional, which is reasonable: while not necessary to answer the immediate question, clinical trial options can be relevant for KRAS G12C management decisions. Marking it as optional avoids automatic overuse.\n- However, the plan was somewhat overengineered for the user\u2019s initial question. The user asked generally about benefits/risks and prognosis impact; the orchestrator could have immediately routed to MedicalResearch (and/or ClinicalGuidelines) to provide a concise, general evidence-based answer, then requested patient details for tailoring. Instead, it set up a multi-agent workflow involving PatientHistory and PatientStatus by default, which risks unnecessary steps if the user only wants a general answer.\n- Including optional ReportCreation and Radiology in the plan was unnecessary for the scope of the question and could be seen as overuse if executed, though the orchestrator appropriately labeled them as optional and did not invoke them.\n- The orchestrator did explicitly offer a lighter-weight path (\u201cgeneral overview\u201d) by immediately tasking MedicalResearch, which mitigates the above concern and shows flexibility.\n\nOverall, the orchestrator consistently chose appropriate specialized agents and scaled thoughtfully, but there were minor missed opportunities to streamline and avoid proposing extra agents for a straightforward query."
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- Correct agent selection: The orchestrator mapped the user\u2019s request to the right set of agents. PatientHistory is the appropriate first stop to retrieve biomarker status, stage at diagnosis, treatment history, and imaging report text\u2014exactly the data the user requested. ReportCreation is the correct tool to generate a formatted Word document for tumor board presentation.\n- Efficient use of specialized capabilities: Adding PatientStatus to synthesize a concise current status is appropriate for a tumor board summary and helps ensure clarity without duplicating effort. It enhances the final report rather than being redundant.\n- Conditional routing for complex elements: The Radiology agent was set to be used only if imaging files are available; otherwise, the plan relies on the latest imaging report text from PatientHistory. This is an efficient, nuanced choice that avoids unnecessary radiology interpretation when primary images aren\u2019t available.\n- Avoidance of unnecessary agents: The orchestrator did not invoke agents outside the scope of the request. ClinicalTrials was offered as an optional addition rather than being automatically included, which respects the user\u2019s scope and avoids needless agent use.\n- Thoughtful orchestration: The orchestrator sought confirmation on key details (whether to proceed, include trials, availability of imaging files, preferred file name), which supports proper agent selection and sequencing. The \u201cyield back to Orchestrator\u201d rule was reiterated, showing good control over multi-agent flow.\n\nOverall, the agent routing was precise, conditional where needed, and aligned with the user\u2019s goals, warranting a top score."
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- Correct agent selection: The orchestrator mapped the user\u2019s broad, complex request (\u201cPrepare tumor board for Patient ID: patient_4\u201d) to a well-structured, multi-agent workflow that mirrors real tumor board preparation. It chose PatientHistory to retrieve structured data, PatientStatus to synthesize clinical context, Radiology for imaging insights, ClinicalGuidelines for evidence-based options, ClinicalTrials for trial matching, MedicalResearch for literature context, and ReportCreation to assemble the final packet. Each agent aligns logically with an essential component of tumor board preparation.\n- Avoidance of unnecessary agents: The plan is comprehensive without being bloated. All selected agents have clear roles and add value. MedicalResearch could be considered optional in some institutions, but including a targeted literature summary is commonly expected for nuanced cases and therefore reasonable. The orchestrator did not invoke extraneous agents (e.g., pharmacy, billing, administrative) that wouldn\u2019t contribute to the clinical goal.\n- Effective routing to specialized expertise: The orchestrator explicitly sequences agents so each contributes its specialty at the right time, with PatientHistory feeding PatientStatus, then domain-specific layers (Radiology, Guidelines, Trials, Research), and finally ReportCreation. It also anticipates data gaps (e.g., absence of imaging files) and states how Radiology will handle this, using report text if images aren\u2019t available.\n- Appropriate multi-agent use for complexity: Preparing a tumor board inherently requires multidisciplinary synthesis. The orchestrator leveraged multiple agents in a coordinated fashion, instituted a handoff rule (\u201cback to you: Orchestrator\u201d) to maintain control, and requested user inputs (guideline preferences, imaging availability, document templates) to tailor downstream agents appropriately.\n\nMinor enhancement (not affecting the score): If available in the ecosystem, adding a Pathology/Genomics agent to parse pathology PDFs or genomic reports could further strengthen biomarker and histology detail. However, the orchestrator already planned to capture these via PatientHistory and PatientStatus, so the current selection remains fully appropriate."
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- Correct agent selection: The orchestrator matched each element of the user\u2019s request to an appropriate specialized agent. PatientHistory to retrieve structured clinical data (biomarkers, initial staging, treatments, imaging summaries) is exactly right. PatientStatus to synthesize a concise current status summary for tumor board is a sensible value-add. Radiology is queued only if imaging files are available, aligning with the \u201clatest imaging findings\u201d requirement while avoiding overreach if no files are provided. ReportCreation is the correct choice to produce a formatted Word document.\n- Avoiding unnecessary agents: The plan explicitly keeps ClinicalTrials, MedicalResearch, and ClinicalGuidelines optional and out of scope unless the user requests them, which prevents unnecessary use of resources and avoids drifting into treatment recommendations.\n- Effective routing for complexity: The orchestrator sequences agents logically\u2014data retrieval first, synthesis second, imaging review conditional on file availability, and document production last\u2014ensuring each agent\u2019s output feeds the next step. It also includes validation of structured outputs and avoids clinical recommendations, which is appropriate for a tumor board summary request.\n- Use of multiple agents when appropriate: The task spans data aggregation, synthesis, imaging assessment, and document formatting; the orchestrator uses multiple agents in a complementary manner and asks clarifying questions (e.g., presence of imaging files, template preferences, de-identification constraints) to decide whether to invoke Radiology and to guide ReportCreation.\n\nOverall, the orchestration is precise, efficient, and well-tailored to the user\u2019s objectives."
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection for the core task: The orchestrator correctly planned to use PatientHistory and PatientStatus to confirm the primary site, histology, stage, biomarkers, and prior therapies for \u201cpatient_4\u201d before summarizing evidence. This is important because the efficacy and role of KRAS G12C inhibitors and chemo-immunotherapy vary by tumor type (e.g., NSCLC vs colorectal), line of therapy, PD-L1 status, and co-mutations. Routing to MedicalResearch to synthesize current evidence on KRAS G12C inhibitors, combination regimens, adverse events, resistance, and prognostic implications is spot-on for the user\u2019s request.\n- Effective use of multiple agents: The sequence PatientHistory \u2192 PatientStatus \u2192 MedicalResearch shows good decomposition of the problem and ensures the evidence summary is contextualized to the patient. This is an appropriate use of multiple specialized agents for a complex, patient-specific query.\n- Avoidance of unnecessary agents: Mostly good, but there are minor overextensions. The plan makes ClinicalTrials a core step rather than explicitly optional, despite the user asking to \u201csummarize emerging trial drugs\u201d rather than to identify patient-matched trials. Emerging drug classes and combination strategies could be covered by MedicalResearch without invoking a trial-matching agent. The orchestrator did ask about geography preferences, which helps justify ClinicalTrials if the user is interested, but the inclusion felt slightly beyond the stated request. Radiology and ReportCreation were clearly marked optional, which is appropriate given the task.\n- Routing complex components to specialized agents: The orchestrator avoided using guideline or recommendation agents and focused on evidence synthesis, which aligns with the request for options, efficacy, risks, and prognosis rather than prescriptive advice. This is an effective constraint.\n- Missed opportunities or minor inefficiencies: The plan could have explicitly made ClinicalTrials conditional on the user confirming they want active trial matching, limiting scope to MedicalResearch for \u201cemerging trial drugs\u201d if not. The Radiology mention, while optional, is not relevant to summarizing systemic treatment options and adds cognitive load. Also, asking the user to reconfirm the exact string \"patient_4\" is cautious but slightly redundant.\n\nOverall, the orchestrator consistently selected appropriate agents and sequencing, with minor over-scoping around trial matching and optional imaging review."
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Correct agent selection: The orchestrator mapped the tumor board request to a well-structured, stepwise plan using appropriate specialized agents. PatientHistory to retrieve the timeline, PatientStatus to synthesize current status, Radiology for imaging review, ClinicalGuidelines for evidence-based options, ClinicalTrials for trial matching, MedicalResearch for focused literature context, and ReportCreation to assemble the final document are all logical and relevant choices.\n- Avoidance of unnecessary agents: The plan is lean and avoids extraneous modules (e.g., pharmacy, nutrition, insurance) that aren\u2019t essential to the initial tumor board preparation. It also sensibly defers action until permissions and inputs are confirmed.\n- Effective routing for complexity: The orchestrator sequenced agents in an order that mirrors clinical workflow (history \u2192 status \u2192 imaging \u2192 guidelines/trials \u2192 research \u2192 report) and set clear handoff rules. It asked the user to specify a research focus to tailor the MedicalResearch agent\u2019s work, reducing wasted effort.\n- Opportunities for improvement: A dedicated Pathology or Genomics/Variant Interpretation agent could enhance the handling of biopsy reports, biomarkers, and NGS findings\u2014areas that often require specialized extraction and interpretation beyond what PatientStatus can reliably synthesize. Including such an agent would further strengthen complex molecular case handling. Otherwise, the selection and routing were appropriate.\n\nOverall, the orchestrator consistently chose suitable agents and coordinated them effectively, with minor missed opportunities in pathology/genomic specialization."
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator correctly scoped the task and first queried the Radiology agent to confirm tool capabilities and input requirements, which is an appropriate preliminary step for imaging workflows.\n- Upon learning that the Radiology agent could analyze CXR but not CT, the orchestrator adapted the plan accordingly rather than misrouting CT to an unsuitable agent. This shows effective capability checking and tool-aware routing.\n- The orchestrator leveraged the PatientHistory agent to retrieve the latest CT and CXR studies and finalized radiology reports\u2014exactly the right agent for data acquisition.\n- For CXR, the orchestrator routed analysis to the Radiology agent\u2019s CXRReportGen tool and tasked that agent with producing structured findings and performing a comparison against the radiologist\u2019s report\u2014appropriate specialization with a clear, concrete tool.\n- For CT, recognizing the absence of a CT-capable AI tool, the orchestrator did not force an ill-suited agent to attempt analysis. Instead, it offered two sensible paths: accept external AI CT findings for comparison or proceed with a report-only summary. This demonstrates prudent handling of capability gaps without wasting resources.\n- The orchestrator avoided unnecessary agents and did not overcomplicate the workflow. Only Radiology (for CXR analysis) and PatientHistory (for data retrieval) were used, which are the minimal and correct selections.\n- The plan included standardizing outputs and ensuring structured comparisons, indicating effective coordination across agents for a multi-step, multi-modality task.\n\nMinor note: The final step\u2019s wording could be read as duplicating the CXR comparison the Radiology agent already performs, but the intent appears to be consolidating results across modalities rather than redoing the CXR comparison. This does not materially affect the correctness of agent selection.\n\nOverall, the orchestrator perfectly matched agents to their strengths, avoided misuse, and provided appropriate options where tooling was limited."
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator correctly identified that preparing a tumor board package is a multi-step, multidisciplinary task and mapped it to a logical sequence of specialized agents: PatientHistory, PatientStatus, Radiology, ClinicalGuidelines, ClinicalTrials, MedicalResearch, and ReportCreation. This shows strong alignment between the user\u2019s request and the required expertise domains.\n- It effectively planned to use multiple agents for the complex workflow and specified clear handoffs, including a rule to yield control after each step\u2014good orchestration hygiene.\n- It proactively requested key inputs (imaging, pathology, biomarkers, ECOG, labs, preferences, location), which is essential for the selected agents (Radiology, PatientStatus, ClinicalTrials) to perform well.\n- It avoided unnecessary agents overall; the included agents are relevant to tumor board preparation, and the inclusion of MedicalResearch for a focused literature snapshot is reasonable for tumor boards.\n\nAreas for improvement that prevent a perfect score:\n- There was no explicit Pathology agent or step to interpret the pathology report or slides, despite requesting pathology materials. In a tumor board context, a dedicated pathology review is typically critical and would be expected if such an agent exists.\n- Depending on the agent roster, the plan could be enhanced by involving a modality-specific perspective (e.g., SurgicalOncology or RadiationOncology) or a Pharmacology/Toxicity agent to anticipate regimen tolerability\u2014though these are secondary to core preparation and may be addressed within ClinicalGuidelines.\n- The orchestrator did not actually trigger any agent yet (pending user confirmation), which is appropriate, but limits observing its real-time routing decisions.\n\nOverall, the agent selection and sequencing are well-conceived and efficient, with minor missed opportunities for an explicit pathology review."
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- Appropriate agent choices for the core task: The orchestrator correctly identified key agents needed to fulfill the user\u2019s request:\n  - PatientHistory to collect timeline, staging, biomarkers, treatments, and imaging/report entries.\n  - Radiology to extract latest imaging findings and note when no images are available for direct review.\n  - PatientStatus to synthesize a concise, structured clinical status from the history.\n  - ReportCreation to generate the formatted Word document for tumor board.\n  These selections match the user\u2019s requirements well and demonstrate effective routing of specialized sub-tasks.\n\n- Unnecessary agents included: The plan adds ClinicalTrials, ClinicalGuidelines, and MedicalResearch. While these could be useful value-adds for some tumor board contexts, they were not requested by the user, expand scope, and consume extra orchestration steps. This violates the criterion to avoid unnecessary agents.\n\n- Sequencing could be tighter: Radiology could proceed directly after PatientHistory (using report text if no images), instead of waiting for PatientStatus. The proposed dependency is not harmful but is slightly inefficient.\n\n- Good prerequisite checks: The orchestrator appropriately asked for imaging (DICOM or report), pathology/biomarker details, ECOG, and data access permission. This shows awareness of agent input needs and EHR/authorization constraints.\n\n- Overall: The orchestrator effectively routed the core components to the right specialists and set up handoffs well, but included three extra agents that were not needed for the stated request, reducing efficiency and focus."
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, logical multi-agent pipeline that aligns well with what a tumor board preparation typically requires: PatientHistory \u2192 PatientStatus \u2192 Radiology \u2192 ClinicalGuidelines \u2192 ClinicalTrials \u2192 MedicalResearch \u2192 ReportCreation. This demonstrates effective routing of the overall complex task to specialized agents.\n- It appropriately used multiple agents, sequencing them so each step feeds the next (e.g., PatientHistory informing PatientStatus, which then informs Guidelines/Trials). It also explicitly asked for imaging inputs before invoking Radiology, which is good practice.\n- It avoided unnecessary agents; all selected agents are relevant to tumor board preparation. MedicalResearch was positioned as flexible/optional based on user preference, which prevents unnecessary work.\n- The orchestrator established control and handoff rules (agents yield back), asked for missing inputs (imaging, research focus), and considered institutional template and timing constraints\u2014good orchestration hygiene.\n\nMinor missed opportunities:\n- No explicit inclusion of a Pathology/Molecular Pathology agent or request for pathology reports/biomarker documentation, which are central to tumor boards. While histology/biomarkers are mentioned under PatientStatus, a dedicated pathology review would be ideal if such an agent exists.\n- It could have proactively requested pathology slide reports or molecular profiling data alongside imaging. Similarly, it did not consider specialty-specific consult agents (e.g., Surgery, Radiation Oncology) if available, though ClinicalGuidelines may cover those considerations.\n\nOverall, the agent selection and routing are strong and appropriate for the request, with small gaps around pathology specialization and specialty consults, hence a score of 4 rather than 5."
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": "patient_4",
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Appropriate planning but poor execution of routing: The Orchestrator proposed a solid, domain-appropriate sequence of specialized agents (PatientHistory, Radiology, PatientStatus, ClinicalGuidelines, MedicalResearch, ReportCreation, with ClinicalTrials optional) that matches the user\u2019s request for prognosis and progression pathways. However, after correctly invoking PatientHistory as a distinct agent, the Orchestrator then produced the outputs for Radiology, PatientStatus, ClinicalGuidelines, MedicalResearch, and ReportCreation within its own message instead of actually routing to those specialized agents. This undermines the core goal of leveraging specialized expertise.\n- Missed opportunities to use specialized agents: Radiology interpretation, guideline synthesis, literature context, and report generation were handled by the Orchestrator itself rather than the respective agents, despite the plan and explicit \u201chandoff\u201d rule. This is a significant miss in agent selection and routing.\n- Avoided an unnecessary agent appropriately: The Orchestrator correctly confirmed that ClinicalTrials was optional and omitted it per defaults, avoiding unnecessary agent involvement for this specific task.\n- Overhead and redundancy: The Orchestrator repeatedly requested the same confirmations across multiple turns, adding coordination overhead without advancing agent engagement. While this doesn\u2019t directly reflect agent selection, it indicates inefficiency in orchestration.\n- Scope adherence: The Orchestrator kept the focus on prognosis/progression and avoided therapeutic recommendations, which is appropriate for the agents it intended to engage.\n\nOverall, while the initial agent selection plan was appropriate, the Orchestrator failed to actually utilize most of the specialized agents, instead generating their content itself. This constitutes a missed opportunity to route complex sub-tasks to the correct agents and merits a below-average score."
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Strong agent selection and sequencing for tumor board preparation. The Orchestrator laid out a clear, logical pipeline: PatientHistory to retrieve the structured timeline, PatientStatus to synthesize the current oncologic summary, Radiology for imaging assessment, ClinicalGuidelines for evidence-aligned treatment options, ClinicalTrials for trial matching, and ReportCreation to assemble a board-ready document. This maps well to typical tumor board workflows.\n- Effective coordination behaviors. The Orchestrator requested necessary inputs (imaging files, pathology/biomarkers) and confirmed preferences (trial filters, report format, meeting details). It also enforced a standardized handoff protocol for agents, promoting smooth orchestration.\n- Appropriate use of multiple specialized agents for a complex task. The selected agents address history, staging/status, imaging, therapy options, trials, and report generation\u2014covering major domains relevant to tumor boards.\n\nAreas for improvement:\n- Pathology/Genomics interpretation was not explicitly routed to a dedicated agent. While PatientStatus can summarize histology/biomarkers, a separate Pathology or Molecular/Genomics agent would better handle nuanced pathology findings, NGS interpretation, variant classification, and PD-L1/MSI/TMB implications\u2014key elements of tumor board discussions.\n- MedicalResearch agent inclusion could be made conditional. It\u2019s useful when a specific research question exists, but the plan implies it will be used by default. Clarifying that it will only be invoked if the user requests a topic (or if gaps/controversies are identified) would avoid unnecessary resource use.\n- Depending on the platform\u2019s agent roster, considering Radiation Oncology/Surgical Oncology planning or Toxicity/Supportive Care agents might further strengthen complex case discussions, though not strictly required for initial prep.\n\nOverall, the orchestration is well thought out and uses specialized capabilities effectively, with minor missed opportunities for additional pathology/genomics specialization and conditional invocation of literature search."
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator demonstrated excellent agent selection and task routing for the user\u2019s request.\n\n- It chose the appropriate agents aligned with each component of the task:\n  - PatientHistory to retrieve the full clinical timeline, staging, biomarkers, treatments, and any recorded imaging findings.\n  - PatientStatus to synthesize a concise current status from retrieved data.\n  - Radiology conditionally, only if imaging files are provided, which avoids unnecessary use of that specialized agent when only narrative reports are available.\n  - ReportCreation to assemble the results into a formatted Word document suitable for tumor board presentation.\n\n- It explicitly avoided unnecessary agents by gating Radiology behind the availability of actual imaging files, otherwise relying on narrative imaging findings from the chart.\n\n- It effectively routed specialized aspects (image interpretation and document formatting) to the appropriate agents and used multiple agents in a logical sequence for a complex, multi-part request.\n\n- The orchestrator also handled operational details well: confirming the plan, requesting needed inputs (imaging files and output format preference), and establishing handoffs and milestone updates, which supports efficient coordination without over-invoking agents.\n\nOverall, the orchestration matched the user\u2019s needs with optimal agent usage, demonstrating efficient and specialized routing throughout."
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator selected generally appropriate agents for the user\u2019s request. PatientHistory is the right first step to aggregate biomarker status, stage at diagnosis, treatment history, and imaging reports. ReportCreation is clearly appropriate for exporting a formatted Word document for tumor board presentation. Including PatientStatus as an intermediate summarization step is reasonable to synthesize key clinical data for the final report.\n- The use of the Radiology agent was conditionally planned, which is appropriate: if actual images are available, analyzing them can add value; otherwise, relying on existing imaging reports avoids unnecessary agent usage.\n- The orchestrator effectively routed a complex, multi-part task to specialized agents and asked clarifying questions about imaging availability and document preferences, which helps ensure the right agents are engaged and the output meets user needs. It also addressed anonymization preferences, demonstrating attention to practical/ethical considerations.\n- Minor opportunities for improvement:\n  - The Radiology step specifically mentioned chest X-ray images, which is overly narrow given that \u201clatest imaging findings\u201d could be from CT, MRI, or PET. Broadening this to any available imaging modality would be more robust.\n  - The PatientStatus agent might be somewhat redundant since ReportCreation could directly synthesize from PatientHistory. While not harmful, it may introduce an extra handoff that isn\u2019t strictly necessary unless PatientStatus adds distinct value (e.g., standardized ECOG or staging synthesis).\n  - If raw pathology data were expected, a Pathology agent could have been considered, but given the request, pulling pathology findings from PatientHistory is sufficient.\n\nOverall, the orchestration was strong, with clear steps, appropriate conditional use of Radiology, and a sensible flow. Minor refinements prevent a perfect score."
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator demonstrated excellent agent selection and routing:\n\n- Chose the PatientHistory agent to retrieve the latest CT/CXR studies and corresponding radiology reports\u2014this is the correct specialized agent for data retrieval.\n- Routed chest X-ray image analysis to the Radiology agent, explicitly noting that this agent is limited to CXR\u2014an appropriate and safe use of specialized capability.\n- Identified the gap for CT image analysis (no CT-capable agent in the current workflow) and did not misapply the Radiology agent to CT. Instead, it offered two clear options: proceed with report-only comparison for CT or pause to integrate a CT-capable tool. This shows careful adherence to tool constraints and responsible orchestration.\n- Avoided unnecessary agents and kept the workflow streamlined to only what\u2019s required (PatientHistory and Radiology).\n- Proposed a stepwise plan with handoffs and ensured each agent returns control, facilitating efficient multi-agent coordination.\n- For the complex task (multi-modality imaging + report comparison), it split responsibilities appropriately and planned to synthesize the results at the end.\n\nA minor optimization could be to initiate PatientHistory retrieval immediately (since the user\u2019s request is clear) while still flagging the CT analysis limitation. However, this does not detract from the agent selection quality. Overall, the orchestrator perfectly matched the user\u2019s needs to the available agents and responsibly handled capability gaps."
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Correct agent selection for core tasks: The orchestrator appropriately routed the user\u2019s request to specialized agents that match the required outputs. PatientHistory to retrieve structured clinical data (biomarkers, stage, treatments, imaging) is well-chosen; Radiology to summarize latest imaging with an option to analyze actual files is optimal; ReportCreation to generate a formatted Word document fits the deliverable; and PatientStatus to synthesize a concise current status is reasonable for a tumor board summary.\n- Avoidance of unnecessary agents: The inclusion of ClinicalGuidelines as a planned step is unnecessary, since the user did not request recommendations. Having that agent \u201cacknowledge scope and refrain\u201d introduces avoidable overhead without adding value. In contrast, ClinicalTrials and MedicalResearch were handled well as optional steps pending user confirmation, avoiding premature or unnecessary invocation.\n- Effective routing of complex elements: The orchestrator sequenced tasks logically\u2014history extraction, status synthesis, imaging review, then document generation\u2014while proactively asking for imaging files and user preferences. This shows good orchestration for a multi-step, multi-agent workflow.\n- Appropriate use of multiple agents: The plan leverages several agents where justified and coordinates handoffs cleanly. Aside from the ClinicalGuidelines inclusion, the agent mix is efficient and aligned with the user\u2019s deliverable.\n\nOverall, the orchestration was strong and would be excellent if it omitted the unneeded ClinicalGuidelines step."
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The user\u2019s task\u2014scanning all pathology and molecular testing to identify biomarker presence\u2014maps cleanly to a single specialized capability: retrieving and parsing the patient\u2019s pathology/molecular records. The Orchestrator correctly selected PatientHistory as the primary (and only necessary) agent to perform this, which is appropriate and efficient.\n- The Orchestrator avoided invoking unnecessary agents. It did not trigger ClinicalTrials, PatientStatus, ClinicalGuidelines, Radiology, or Research agents. Those were presented as optional follow-ons, clearly gated by user preference, demonstrating restraint and good resource stewardship.\n- The Orchestrator effectively moderated the workflow: it gathered essential inputs (patient ID, cancer type, biomarker list vs \u201cscan all,\u201d desired time scope, and cutoff preferences) to ensure PatientHistory can retrieve the right corpus and extract relevant biomarker details. This improves the quality of the downstream extraction without calling extra agents.\n- For a task of this complexity, a single retrieval/extraction agent is sufficient, and the Orchestrator planned to compile the biomarker table itself. This is a reasonable division of labor; no additional specialized agents were needed.\n- The Orchestrator also enforced a clear handoff protocol (\u201cback to you: Orchestrator\u201d), showing strong coordination control.\n\nMinor note: If a separate, more specialized \u201cBiomarkerExtraction\u201d parser existed, routing PatientHistory output to it could be considered. However, given PatientHistory\u2019s stated capabilities, choosing only that agent was optimal here."
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator selected an optimal set of specialized agents for the task:\n  - PatientHistory to retrieve patient_4\u2019s tumor type, stage, KRAS mutation status, and treatment history.\n  - PatientStatus to synthesize a concise, structured clinical profile suitable for eligibility matching (including ECOG and biomarkers).\n  - ClinicalTrials to perform the search for active trials, filtering by patient status and geography, and returning trial phase and contact info.\n- It avoided unnecessary agents; no extraneous services (e.g., imaging, drug interaction, or billing) were invoked.\n- It effectively identified missing critical inputs (geographic location, travel radius, phase preferences, site preferences, and date relevance) and requested them, which are essential for accurate trial matching.\n- It planned to proceed in parallel where possible (starting PatientHistory retrieval while awaiting the user\u2019s location/travel details), demonstrating efficient orchestration.\n- The routing shows appropriate complexity handling: assembling clinical status before querying trials is a sound step that leverages specialization and likely improves match quality.\n- No missed opportunities for additional specialized agents were evident, as ClinicalTrials should cover phase and contact details and likely handles geographic filtering internally.\n\nOverall, the agent selection and sequencing were precisely aligned with the user\u2019s goal and used specialized capabilities efficiently."
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator chose an appropriate, minimal set of specialized agents for the task:\n  - PatientHistory to retrieve the patient_4 record.\n  - PatientStatus to synthesize key eligibility variables (tumor type, stage, KRAS status, prior treatments, ECOG).\n  - ClinicalTrials to query and filter active trials by those variables and geographic constraints, and to include phase and contact details.\n- It proactively collected missing user inputs essential for downstream filtering (location, travel radius, trial phase preferences, site-of-care preferences) rather than invoking agents prematurely.\n- It avoided unnecessary agents and scope creep; all selected agents map directly to the information requirements stated by the user.\n- It set a clear sequencing and handoff protocol, ensuring each specialized agent returns control to the orchestrator, which supports efficient coordination.\n- The plan reflects awareness of trial eligibility nuances (e.g., ECOG performance status) and integrates them via PatientStatus, improving the precision of ClinicalTrials matching.\n- Minor optional improvements (e.g., clarifying interventional vs observational trials, consent/authorization, or pediatric/adult scope) would be nice-to-have but do not detract from the correctness of agent selection.\n\nOverall, the orchestrator\u2019s routing and agent selection perfectly align with the user\u2019s request and use specialized capabilities efficiently."
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing were excellent for this task.\n\n- Correct agent matching: The plan used PatientHistory to retrieve the latest CT/CXR metadata, radiology report text, and image links, then used the Radiology agent (with the imaging tool) to analyze both CT and CXR. This directly maps to the user\u2019s request: obtain studies and reports, perform image analysis, and compare findings.\n- Avoided unnecessary agents: No extraneous agents were introduced (e.g., no generic medical or specialty agents beyond Radiology and data retrieval). The orchestrator reserved the comparative synthesis for itself, which is appropriate and efficient.\n- Effective routing for complexity: The orchestrator delegated image interpretation to the specialized Radiology agent and kept the higher-level comparison/synthesis step in-house. This appropriately leverages specialized expertise where needed.\n- Use of multiple agents appropriately: The workflow split retrieval (PatientHistory) and analysis (Radiology) cleanly, then the orchestrator performs the comparison step, which is precisely the multi-agent division of labor this task requires.\n\nAdditional positives:\n- Anticipated data-access constraints by asking for authorization and image provision, and specified acceptable formats (DICOM for CT, DICOM or high-quality PNG/JPEG for CXR), which is practical for enabling the Radiology agent\u2019s imaging tool.\n- Scoped instructions to ensure agents hand control back to the orchestrator, maintaining coordination without unnecessary back-and-forth.\n\nNo missed opportunities or unnecessary agent use were evident, and the chosen agents are optimal for the task."
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator proposed a clear, logical, and multidisciplinary sequence for preparing a tumor board: starting with PatientHistory, moving to PatientStatus synthesis, then conditionally involving Radiology, followed by ClinicalGuidelines, ClinicalTrials, and culminating in ReportCreation, with MedicalResearch as an optional add-on. This aligns well with typical tumor board workflows.\n- It effectively used specialized agents where appropriate:\n  - PatientHistory and PatientStatus are good foundational steps.\n  - Radiology was made conditional on image availability, which avoids unnecessary agent use.\n  - ClinicalGuidelines and ClinicalTrials are both relevant for tumor board decision-making and appropriately sequenced after a consolidated status.\n  - ReportCreation is a sensible final step to package the outputs.\n  - MedicalResearch optionalization is appropriate, avoiding unneeded work unless requested.\n- The orchestrator minimized unnecessary agents by gating Radiology and keeping MedicalResearch optional, demonstrating resource-aware routing.\n- It handled complexity by coordinating multiple agents and explicitly managing dependencies (e.g., requesting imaging/pathology uploads, confirming focus areas, specifying output format and deadline).\n\nOpportunities for improvement (why not a 5):\n- A dedicated Pathology agent was not included. For tumor boards, a specific pathology review (histology, grade, margins, biomarker assays, molecular profiling) is often as critical as radiology. Relying solely on PatientHistory/Status may miss nuanced pathology interpretation. Adding a Pathology agent (conditional on availability of reports/slides) would enhance specialization and completeness.\n- Consider a mechanism to ingest radiology and pathology reports even without raw images or slides (e.g., EHR report parsing) to ensure Radiology/Pathology insights when files aren\u2019t uploaded.\n- Depending on the institution\u2019s workflow, specialized agents for Surgical, Medical, and Radiation Oncology planning or a Toxicity/Pharmacy review could be offered as optional steps if specific questions arise, though the ClinicalGuidelines agent may cover much of this.\n\nOverall, the orchestrator\u2019s agent selection was thoughtful and efficient, with minor missed opportunities for specialized pathology review, meriting a strong score."
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator precisely matched the user\u2019s request with the minimal, most appropriate set of agents:\n  - PatientHistory to retrieve the latest CT and CXR studies, image access suitable for the imaging tool, and the official radiologist reports.\n  - Radiology to analyze the images using the imaging tool and generate AI findings.\n  - Orchestrator to perform the comparison and summarize discrepancies/additional findings.\n- It avoided unnecessary agents (e.g., no unrelated specialty or general NLP agents were invoked), keeping the workflow lean and relevant.\n- The question is inherently multi-step and multidisciplinary; the orchestrator routed the imaging analysis to a specialized Radiology agent while retaining the synthesis and comparison task, demonstrating effective delegation for complex tasks.\n- The sequencing was logical and efficient (data retrieval \u2192 image analysis \u2192 comparison), and it explicitly ensured access permissions before proceeding, which is appropriate for medical data workflows.\n- Overall, the agent selection and routing were optimal for the task, leveraging specialized expertise efficiently without redundancy."
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- The user asked a focused, evidence-based clinical question about benefits, risks, and prognostic impact of transitioning to adagrasib for a KRAS p.G12C mutation. This could be answered effectively by routing to a ClinicalGuidelines or MedicalResearch agent right away, possibly after a brief clarification of tumor type (e.g., NSCLC vs CRC) and line of therapy, since efficacy/safety and prognosis vary by indication.\n- The orchestrator over-engineered the workflow. It proposed a multi-step sequence beginning with PatientHistory and PatientStatus and even included Radiology, ClinicalTrials, and ReportCreation. Most of these are unnecessary for the user\u2019s question and create friction by asking for a patient ID and extensive clinical details before providing any substantive answer.\n- Critical clarifications were not prioritized. The most pertinent single clarifier here is the primary cancer type and current line of therapy; instead, the orchestrator asked for a broad intake list and chart retrieval.\n- Appropriate agents were included but not optimally ordered. ClinicalGuidelines and MedicalResearch were the right choices to address the question, yet they were placed after PatientHistory/PatientStatus, and ancillary agents (Radiology, ReportCreation, ClinicalTrials) were proposed despite no user request or apparent necessity.\n- The orchestrator did avoid giving clinical recommendations itself, which is appropriate for this role, but it missed the opportunity to efficiently route the question to the minimal set of relevant agents and return an evidence-based synthesis promptly.\n\nOverall, the plan used unnecessary agents and imposed an unwarranted data-gathering step, rather than directly leveraging specialized guideline/research agents with a brief, targeted clarification."
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing were excellent for the user\u2019s request.\n\n- Matched agents to tasks appropriately:\n  - PatientHistory to retrieve diagnosis date, stage at diagnosis, histology, biomarkers, treatment history, and imaging reports is the correct first step.\n  - Radiology conditionally analyzing actual imaging files (if available) directly addresses \u201clatest imaging findings\u201d and adds value beyond report impressions when possible.\n  - PatientStatus to synthesize a structured current status from the gathered data is a sensible use of specialization to ensure a comprehensive diagnostic summary.\n  - ReportCreation for generating a formatted Word document tailored to a tumor board presentation precisely meets the deliverable.\n\n- Avoided unnecessary agents:\n  - ClinicalGuidelines was explicitly excluded to avoid recommendations, which weren\u2019t requested.\n  - ClinicalTrials and MedicalResearch were offered as optional add-ons rather than invoked automatically, preventing scope creep and resource waste.\n\n- Effective routing of complexity:\n  - The conditional handoff to Radiology based on the presence of imaging files demonstrates efficient use of specialized capabilities without overuse.\n  - The plan to aggregate data through PatientStatus before document creation streamlines the pipeline and reduces the burden on ReportCreation.\n\n- Appropriate multi-agent use:\n  - The orchestrator leveraged multiple agents in a logical sequence (History \u2192 Radiology if applicable \u2192 Status \u2192 Report), each with a well-defined role, and enforced handoff control back to the orchestrator.\n\nOverall, the orchestration was well-scoped, efficient, and aligned with the user\u2019s needs, with no evident missed opportunities for better agent selection."
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The orchestrator proposed a sensible, multidisciplinary sequence for tumor board preparation: PatientHistory \u2192 Radiology \u2192 PatientStatus \u2192 ClinicalGuidelines \u2192 ClinicalTrials \u2192 MedicalResearch \u2192 ReportCreation. This maps well to real-world tumor board workflows and leverages specialized agents where they add clear value.\n- Effective routing and sequencing: The stepwise plan, explicit \u201cyield back\u201d rule, and request for missing data show good orchestration hygiene. The plan ensures downstream agents (Guidelines, Trials, Research) depend on a compiled PatientStatus, which is appropriate.\n- Use of multiple agents for a complex task: The orchestrator correctly decomposed the problem and used several specialized agents. This is appropriate given the breadth of a tumor board deliverable (history, imaging, staging/biomarkers, guideline-based options, trials, and synthesis).\n- Avoidance of unnecessary agents: Most agents are justified in this context. One could argue that MedicalResearch might be optional unless specifically requested, but it is still a reasonable inclusion for a tumor board where recent evidence may influence recommendations.\n\nAreas for improvement preventing a 5:\n- Imaging-pathology integration: PatientStatus is described as compiling status from PatientHistory only; it should explicitly integrate Radiology outputs (and ideally Pathology) to assign stage accurately.\n- Missing dedicated Pathology/Molecular agent: A specialized Pathology/Molecular profiling agent would strengthen biomarker interpretation and confirm histology, which are critical for staging and treatment selection.\n- Consideration of surgical/radiation decision support: Depending on tumor type, adding targeted consult agents (e.g., SurgicalOncology or RadiationOncology) could be valuable if the user flags those focus areas.\n- Trial matching details: The plan doesn\u2019t state how geographic or eligibility constraints (e.g., organ function, prior lines) will be captured; ensuring PatientStatus includes these would improve ClinicalTrials matching.\n\nOverall, the orchestrator\u2019s agent selection is strong and well-structured with minor gaps in integration and domain coverage, warranting a score of 4."
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Strengths:\n  - The orchestrator identified and sequenced the core agents appropriately for the user\u2019s request: PatientHistory to retrieve structured clinical data (staging, biomarkers, treatments, imaging report text), PatientStatus to synthesize the current status, and ReportCreation to produce a formatted Word document. This directly aligns with the requested deliverable.\n  - It conditionally planned to involve Radiology if the user could supply imaging files, which is an appropriate use of a specialized agent for image interpretation.\n  - It explicitly checked with the user about including ClinicalTrials, which can be relevant for tumor boards but was not strictly requested; asking for preference is a sensible choice.\n  - It gathered prerequisite inputs (e.g., imaging availability, additional details to emphasize) and enforced handoff discipline, which supports efficient multi-agent coordination.\n\n- Minor issues:\n  - Including ClinicalGuidelines as a \u201cnote\u201d step to acknowledge and yield is unnecessary and adds complexity without value for this task. It would be better to omit that agent entirely when treatment recommendations are out of scope.\n  - Radiology was described as noting limitations even if no images were provided; in that case, invoking Radiology at all is unnecessary. The orchestrator should explicitly skip Radiology when there are no imaging files and rely on the chart\u2019s imaging report text from PatientHistory.\n  - The preflight request for PatientStatus to list required fields is a reasonable coordination step but may be over-engineered; PatientHistory could first retrieve the comprehensive dataset, and PatientStatus can then flag any gaps, avoiding an extra agent turn.\n  - If a dedicated Pathology or Biomarkers agent exists in the ecosystem, explicitly routing biomarker/histology extraction there could further optimize accuracy; however, relying on PatientHistory to retrieve these from the chart is still acceptable.\n\nOverall, the orchestrator\u2019s agent selection was well matched to the task with a few avoidable, minor inefficiencies, warranting a \u201cGood\u201d rating rather than \u201cExcellent.\u201d"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nThe orchestrator\u2019s agent selection and routing plan is excellent for this task.\n\n- Correct agent selection: The pipeline\u2014PatientHistory \u2192 PatientStatus \u2192 MedicalResearch \u2192 ClinicalTrials\u2014is well matched to the user\u2019s request. The question hinges on both patient-specific context (cancer type, line of therapy, prior treatments, ECOG) and up-to-date therapeutic evidence (KRAS G12C inhibitors, chemo-immunotherapy, emerging agents, efficacy/risk, and prognostic impact). PatientHistory and PatientStatus appropriately gather and structure the clinical context before evidence synthesis. MedicalResearch is the right agent to aggregate efficacy and safety data and discuss prognosis. ClinicalTrials is the right agent to identify ongoing trials applicable to the patient\u2019s profile.\n\n- Avoided unnecessary agents: The orchestrator did not introduce extraneous agents. For example, it did not call generic summarizers or unrelated tools. While a Guidelines/Regulatory agent could have been considered, MedicalResearch reasonably covers current approvals and evidence, so its omission does not detract from suitability.\n\n- Effective routing to specialized agents: The orchestrator clearly delineated responsibilities and sequencing, ensuring that specialized agents handle their domains (history/status vs. research vs. trials). It also set guardrails for informational-only output and asked agents to specify inputs, which helps efficiency and correctness.\n\n- Appropriate use of multiple agents: The plan leverages multiple agents where the problem is inherently multi-faceted: patient context, evidence synthesis, and trial matching. It also includes a sensible user confirmation step to ensure correct patient targeting.\n\nOverall, the orchestration is well-structured, avoids redundancy, and matches the user\u2019s complex clinical query with the optimal specialized agents."
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nThe orchestrator\u2019s agent selection and routing plan is strong and well-structured for preparing a tumor board packet.\n\nWhat worked well:\n- Appropriate agents for core tasks: PatientHistory to establish the timeline, PatientStatus for current clinical snapshot, Radiology for imaging synthesis, ClinicalGuidelines for evidence-based options, ClinicalTrials for research opportunities, and ReportCreation to assemble the final packet. This maps closely to real tumor board workflows.\n- Effective sequencing and handoffs: Data flows logically from history to status to specialized reviews, minimizing duplication and ensuring each downstream agent gets the right inputs.\n- Useful input validation: Requesting imaging files, institutional constraints, and whether guideline options and research synthesis are desired improves relevance and efficiency.\n- Avoidance of unnecessary agents: No extraneous agents were invoked by default; ClinicalGuidelines and ClinicalTrials are appropriate for a tumor board, and MedicalResearch is positioned as optional based on user-provided topics.\n\nAreas for improvement:\n- Potential missed opportunity: Including a dedicated Pathology agent (or making it explicit that pathology and biomarker details will be validated/standardized) could strengthen the packet, especially for nuanced histology, staging nuances, and biomarker interpretation often critical to tumor board decisions.\n- MedicalResearch step is listed in the default plan; although it\u2019s conditioned on user topics, the plan could state more clearly that it will be skipped if not requested to avoid any perception of unnecessary processing.\n- Depending on available data, a Labs/Oncology Pharmacology agent could be considered when dosing adjustments, organ function, or drug\u2013drug interactions are key discussion points; not mandatory, but sometimes useful.\n\nOverall, the orchestrator consistently chose appropriate agents, sequenced them well, and tailored the plan with sensible checkpoints. Minor enhancements around pathology specialization and clarifying optional steps would elevate it to excellent."
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Correct agent selection for available tasks: The orchestrator appropriately routed the CXR analysis to the Radiology agent (which is stated to support chest X-ray) and used the PatientHistory agent to retrieve the latest imaging timeline and radiologist reports. This matches the user\u2019s request to compare AI-generated findings against the radiologist\u2019s reports.\n- Avoided unnecessary agents: The plan relies only on PatientHistory and Radiology, avoiding superfluous agents. The orchestrator kept synthesis and discrepancy analysis within its own role, which is reasonable.\n- Clear handling of modality limitations: The orchestrator explicitly recognized that the Radiology agent does not support CT analysis and proposed a practical fallback: either compare provided AI CT findings from the user\u2019s imaging tool or rely solely on the radiologist\u2019s CT report while noting the limitation. This shows good awareness of agent capabilities and avoids misrouting CT to an unsuitable agent.\n- Opportunities for improvement (reason for not a 5):\n  - The user asked to analyze CT \u201cusing the imaging tool.\u201d The orchestrator did not check or propose any alternate CT-capable imaging agent or plugin (if available), defaulting to user-provided AI CT findings. If such an agent exists, not leveraging it is a missed opportunity.\n  - It could have proactively initiated PatientHistory retrieval immediately (since it is likely safe and necessary) rather than waiting for user confirmation, expediting the workflow.\n  - It might have clarified whether the \u201cimaging tool\u201d is accessible within the system and, if so, invoked it directly for both CT and CXR to keep the workflow consistent.\n\nOverall, the orchestration is solid: it selected the right agents for CXR and data retrieval, avoided unnecessary agents, and managed modality constraints well. Minor improvements around exploring CT-capable agents and proactive data retrieval would elevate it to excellent."
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The orchestrator correctly recognized the user\u2019s request as a multi-step task requiring data aggregation, synthesis, and final document preparation for a tumor board. The proposed pipeline was sensible:\n  - PatientHistory to retrieve source data is an appropriate first step.\n  - Radiology was included conditionally, which is efficient and avoids unnecessary agent use when no images are available.\n  - PatientStatus to synthesize staging, histology, biomarkers, ECOG, and treatment history is a logical specialization to convert raw history into a clinical summary.\n  - ClinicalTrials to identify relevant trials based on the derived status is appropriate for tumor board preparation.\n  - ReportCreation to compile the final packet matches the end goal without overstepping into new treatment recommendations.\n- The orchestrator avoided unnecessary agents and did not prematurely trigger any agent before user confirmation, demonstrating good resource management.\n- It asked targeted clarifying questions (confirm plan, imaging availability, specific discussion points) to ensure the right agents are used and outputs are aligned to the tumor board\u2019s needs.\n- It established a clear handoff protocol (\u201cback to you: Orchestrator\u201d) to coordinate agent outputs effectively.\n\nAreas for improvement (preventing a perfect score):\n- While Radiology was handled conditionally, there was no equivalent conditional pathway for Pathology or Genomics/NGS review. For tumor boards, a dedicated Pathology agent (if available) to extract/interpret histopathology and a Genomics/Biomarker agent to interpret NGS and biomarkers would add valuable specialization. Relying solely on PatientHistory and PatientStatus may miss deeper insights from pathology or molecular reports.\n- Similarly, a Labs/Comorbidities summarization agent (if available) could be useful but is less critical than Pathology/Genomics.\n\nOverall, the orchestrator\u2019s agent selection and sequencing were strong and efficient, with only minor missed opportunities to employ specialized agents for pathology/molecular data interpretation."
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "score": 5,
            "explanation": "Rating: 5\n\nExplanation:\n- The orchestrator mapped the user\u2019s request to a well-chosen set of specialized agents:\n  - PatientHistory to gather the comprehensive timeline, including diagnostics, biomarkers, treatments, and imaging report summaries.\n  - PatientStatus to synthesize current clinical status, including stage at diagnosis and current stage, biomarker status, and ECOG.\n  - ReportCreation to produce the requested formatted Word document and handle export logistics.\n- For imaging findings, the orchestrator appropriately routed to Radiology only if images or finalized reports are available, otherwise falling back to PatientHistory\u2019s text-based imaging summaries. This conditional use demonstrates efficient resource use and avoids unnecessary agent calls.\n- ClinicalTrials was presented as optional context for a tumor board, with explicit user confirmation required, which respects scope and avoids unnecessary agent use when not requested.\n- The proposed sequence is logical and leverages agents\u2019 strengths while minimizing redundancy. It also includes useful checks (ID validation, user preferences, and delivery format).\n- No inappropriate agents were invoked, and there were no missed opportunities to use specialized expertise given the task description. The orchestration rule to return control to the Orchestrator further supports clean handoffs.\n\nOverall, the agent selection and routing were optimal for the user\u2019s needs, with optional components clearly delineated and contingent on user input."
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- Appropriate agent selection: The orchestrator laid out a clear, logical sequence of specialized agents well-suited to preparing a tumor board packet: PatientHistory (timeline), PatientStatus (current clinical snapshot), Radiology (imaging review/needs), ClinicalGuidelines (standard-of-care recommendations), ClinicalTrials (trial matching), MedicalResearch (evidence context), and ReportCreation (final document). This matches common tumor board workflows and leverages specialization effectively.\n- Avoidance of unnecessary agents: Most chosen agents add value. One could argue that MedicalResearch is optional depending on the tumor board\u2019s scope, and there is some potential overlap between PatientHistory and PatientStatus. However, the separation (timeline vs. current status) is justifiable, and a brief literature overview is often appreciated in tumor board discussions. Overall, no clear waste.\n- Effective routing for complexity: The plan anticipates data gaps (e.g., imaging availability) and requests needed inputs. It sequences agents so that guideline and trial recommendations are informed by the prior status summary, which is appropriate. The inclusion of a final ReportCreation agent ensures integration of outputs into a polished deliverable.\n- Missed opportunities: A dedicated Pathology agent is notably absent; pathology review (histology, margins, grade, biomarkers, molecular profiling) is central to tumor boards. The orchestrator requests pathology inputs but does not designate an agent to synthesize them. Additionally, subspecialty opinion agents (e.g., SurgicalOncology, RadiationOncology) could have been considered for nuanced resectability or radiation planning questions if available, though ClinicalGuidelines may suffice for a baseline plan.\n\nOverall, the orchestrator demonstrates good agent selection and sequencing with minor gaps that prevent a top score."
          }
        }
      ]
    },
    "task_completion_and_focus": {
      "average_score": 2.4615384615384617,
      "num_evaluations": 13,
      "num_errors": 53,
      "results": [
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Primary task completion: The user asked for a short report estimating prognosis and possible progression pathways for patient_4 based on the full clinical picture. The assistant did not produce the requested report. After failing to access EHR data, it repeatedly requested a minimal dataset from the user but never advanced to generating a summary, even a provisional one. This constitutes poor handling of the main task.\n- Handling side tasks: The assistant thoroughly set up a multi-agent plan, confirmed handoff rules, asked for ID clarification, format preferences, and consent, and provided multiple micro-updates. These process steps were appropriate and consistent with the orchestration model, but they were repeated many times without progress, creating redundancy and friction.\n- Focus maintenance: The assistant remained focused on the goal of producing a prognosis/progression short report and did not get distracted by unrelated topics. However, it got stuck in a loop of confirmations and data requests. Although focused, it failed to pivot effectively when the EHR access issue persisted.\n- Recovery from obstacles: After PatientHistory failed due to no EHR connectivity, the assistant reasonably pivoted to request a minimal dataset. But it asked for the same information across multiple turns without streamlining or offering a rapid fallback (e.g., a clearly-labeled hypothetical demonstration or a generic, literature-based overview tailored to \u201cunknown\u201d fields). Only very late did it offer a hypothetical demo option.\n- Return to main thread: The assistant repeatedly promised next steps (PatientStatus \u2192 Radiology \u2192 etc.) but never executed them due to missing inputs. It did not provide any partial, non-prescriptive synthesis using defaults or \u201cunknown\u201d placeholders, which could have shown progress.\n\nHow to improve:\n- After one or two unsuccessful data requests, provide a provisional, non-prescriptive report using clearly-labeled assumptions or a hypothetical example, or outline general prognostic factors and typical progression pathways based on the most likely cancer type if known, while noting uncertainties.\n- Avoid repeating the same plan and data request verbatim across multiple turns; consolidate and streamline.\n- Explicitly acknowledge the limitation and offer clear alternatives (e.g., paste imaging impression, share anonymized summary, or proceed with a generic template) earlier.\n- If defaults are claimed as confirmed, proceed as far as possible with background evidence and generic pathways, clearly marking unknown fields, to meet the user\u2019s request for a \u201cshort report\u201d rather than stalling."
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- The assistant maintained a strong focus on the user\u2019s primary goal\u2014preparing a tumor board package for patient_4\u2014by presenting a clear, stepwise orchestration plan with appropriate agent sequencing and defined handoffs.\n- It addressed potential ancillary needs (imaging availability, research focus, trial preferences) without drifting from the core objective, and established a rule for agents to hand the conversation back to the orchestrator, which supports focus maintenance.\n- However, it did not begin executing the main task. Instead of starting with PatientHistory (which it proposed as step 1), it paused for confirmation and optional inputs. While reasonable, this means no tangible progress (e.g., history retrieval, status summary) was made toward the tumor board preparation within the given exchange.\n- There were no side tasks to handle; thus, returning to the main thread was not tested.\n- Overall, it set up the workflow well and stayed on target, but task completion at this stage was limited to planning and requesting confirmation, warranting an average score."
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- The assistant maintained focus on the user\u2019s objective and outlined a clear plan, including which agents to engage and in what order. The clarifying questions (ClinicalTrials inclusion, imaging file availability, formatting preferences, delivery method, de-identification) were relevant and on-topic.\n- However, it did not complete the primary task: no patient data were retrieved, no diagnostic summary was generated, and no Word document was produced. The user\u2019s request was specific and actionable (biomarker status, stage at diagnosis, treatment history, latest imaging findings, exported as a Word document), yet the assistant stopped at planning and seeking confirmation.\n- While it stayed focused and did not get distracted by unrelated side tasks, it deferred the main work entirely pending user confirmation. It could have proceeded with reasonable defaults or at least started retrieving patient data to accelerate completion.\n- Because the main task was not advanced beyond planning, the performance aligns more with \u201chandled the main task poorly/did not complete it\u201d rather than \u201caverage,\u201d despite good focus."
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Primary task completion: The assistant did not generate the requested diagnostic summary nor deliver a formatted Word document. It only presented a workflow plan and requested confirmations, so the main deliverable was not produced.\n- Addressing all parts: The user specified four components (biomarker status, stage at diagnosis, treatment history, latest imaging findings). The assistant acknowledged these and outlined how it would retrieve them, but did not actually provide any of the content.\n- Handling side tasks: The assistant introduced side tasks (plan confirmation, inclusion of ClinicalTrials, upload of imaging files, formatting preferences). While these are reasonable considerations, they became blocking steps (\u201cOnce you confirm, I will proceed\u201d), which delayed progress on the primary objective.\n- Focus maintenance: The assistant remained conceptually focused on the user\u2019s goal and did not drift into irrelevant topics. However, it expanded scope (optional ClinicalTrials) and gated execution on confirmation rather than proceeding with defaults, which undermined task completion.\n- Return to main thread: There was no return to the main execution path or incremental progress (e.g., pulling PatientHistory) after posing the questions. No intermediate outputs or milestone updates were provided.\n\nOverall, the assistant planned effectively but did not execute. It should have proceeded with available defaults (omit ClinicalTrials unless requested, rely on chart-documented imaging findings) and delivered at least a draft report, while inviting the user to provide optional enhancements."
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- The assistant maintained strong focus on the user\u2019s objective throughout, presenting a clear, stepwise plan that directly maps to the requested tasks: retrieving the latest CT and CXR studies, analyzing them with the imaging tool, and comparing AI-generated findings to the radiologist\u2019s report to summarize discrepancies/additional findings.\n- It appropriately identified missing prerequisites (images, study details, and the radiologist\u2019s final report) and requested them, including specific formats and access options. This is necessary to proceed and shows good orchestration readiness.\n- However, the primary task was not completed: no agents were actually engaged, no imaging analysis was performed, and no comparison or summary of discrepancies was provided. The response stopped at planning and input collection.\n- There were no side tasks to manage; the assistant did not get distracted and maintained focus on the main objective, but it didn\u2019t advance beyond the setup phase.\n- Opportunities to improve task completion: If environment access is commonly available, the assistant could have proactively attempted Step 1 (PatientHistory) to retrieve studies and reports, or explicitly asked a succinct yes/no permission to proceed with PatientHistory, potentially accelerating progress.\n\nOverall, this is a focused and well-structured setup, but without execution or partial completion of the main task, it merits an average score."
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- The assistant maintained focus on the user\u2019s objective by outlining a detailed, relevant plan specifically oriented to producing the requested diagnostic summary and Word document. It did not derail into unrelated topics.\n- However, it did not complete the primary task. It neither retrieved patient data nor generated the requested diagnostic summary or Word document. The user explicitly asked for biomarker status, stage at diagnosis, treatment history, and latest imaging findings\u2014none of these were delivered.\n- It introduced optional side tasks (e.g., inclusion of clinical trials) and formatting preferences, which are reasonable clarifications, but it halted execution pending confirmation rather than proceeding with the core deliverables. Given the request was clear enough to begin (patient ID provided), the assistant could have started retrieving data and assembling the report while noting optional enhancements.\n- It did not address any multi-part components of the request (biomarkers, stage, treatment history, imaging findings) and did not provide a downloadable Word file.\n- While the plan and agent orchestration steps show good intent and structure, the failure to execute and produce outputs results in below-average task completion."
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- The assistant maintained clear focus on the user\u2019s primary objective\u2014scanning pathology and molecular testing for specific biomarkers\u2014by laying out a structured plan and identifying the necessary steps and agents.\n- It appropriately handled prerequisite requirements by confirming with PatientHistory what input is needed (patient_id) and then asking the user for that information, along with a biomarker list or permission to scan all biomarkers found. This is a reasonable and necessary clarification to proceed.\n- The assistant also asked for helpful scope and reporting preferences without drifting into unrelated topics, demonstrating good focus maintenance and proactive planning.\n- However, the main task was not completed: no actual scanning or extraction of biomarker status was performed because the conversation ended prior to receiving the needed patient_id and any biomarker list. As a result, while the setup was solid, the primary user request remained unfulfilled at this point.\n- No side tasks emerged, so there was no opportunity to demonstrate returning to the main thread after diversions.\n\nOverall, the assistant stayed focused and prepared effectively but did not accomplish the core task within the provided conversation."
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Primary task completion: The assistant did not identify or list any active clinical trials, nor did it provide phases or contact information. It only presented a workflow and requested additional inputs. As a result, none of the user\u2019s core requirements (matching by tumor type, stage, KRAS status, treatment history, and geographic location; including phase and contact info) were fulfilled.\n- Handling multi-part requirements: While the assistant acknowledged all relevant matching criteria in its plan (tumor type, stage, KRAS, treatment history, location), it did not execute on them. No extraction of patient_4\u2019s history/status occurred, and no trial list was produced.\n- Side tasks and focus: The assistant remained focused on the objective and asked for a key missing input (geographic location and travel range). However, it also introduced optional preference questions (phase/site preferences, remote components) that could slow progress and were not strictly necessary to begin. It could have proceeded with available steps (e.g., retrieving PatientHistory and deriving PatientStatus) while waiting for location details, then circled back to finalize the trial list once the user responded.\n- Return to main thread: There was no completion of side tasks to return from. The assistant did not advance the main objective beyond planning.\n\nOverall, the assistant maintained focus but handled the main task poorly by not progressing with the parts it could complete and by not delivering any trial results. To improve, it should:\n- Proceed immediately to retrieve patient_4\u2019s history and current status.\n- Ask only for essential missing inputs (location and travel radius) and make reasonable defaults if preferences are not provided.\n- After obtaining minimal required data, produce a concrete, structured list of eligible active trials with phase and contact info, then iterate if the user refines preferences."
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- The assistant maintained focus on the user\u2019s objective and laid out a sensible, stepwise plan to obtain patient details and query clinical trials, including a clear intention to match on tumor type, stage, KRAS status, treatment history, and location. The request for clarifications (geographic location/travel radius, KRAS variant, ECOG) is relevant to the task.\n- However, it did not actually begin executing the plan or deliver any part of the requested output. No patient data were retrieved, no current status was summarized, and no trials (with phase and contact info) were identified or listed.\n- The assistant gated progress on user confirmation rather than proceeding to query available sources (e.g., PatientHistory) first and then only requesting any missing fields. This choice delayed task completion and left the main request unfulfilled at this stage.\n- There were no side tasks to manage, so focus maintenance was not tested beyond staying on-topic.\n- Overall, while the intent and structure were appropriate, the system handled the main task poorly by not advancing toward results, thus earning a below-average score."
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nExplanation:\n- Primary task completion: The user requested a concrete analysis of the latest CT and CXR for patient_4 using the imaging tool, a comparison against the radiologist\u2019s report, and a summary of discrepancies/additional findings. The assistant did not perform any analysis, retrieve any images or reports, or provide a comparison or summary. It only outlined a plan and asked for confirmations/input, so the core task remained uncompleted.\n- Addressing all parts: The assistant acknowledged both modalities (CXR and CT), noted tool limitations for CT, and proposed alternative approaches (report-based comparison for CT if image analysis isn\u2019t feasible). This shows awareness of the multi-part nature of the task, but there was no execution.\n- Handling side tasks: The assistant focused on setup and logistics (confirming patient ID, plan approval, data sources), which are reasonable side tasks. It managed these without drifting off-topic.\n- Focus maintenance: The assistant stayed focused on the user\u2019s objective, presenting a clear, stepwise plan and constraints. However, it overemphasized process and required confirmations instead of proceeding with available steps (e.g., initiating PatientHistory retrieval for \u201cpatient_4\u201d).\n- Return to main thread: Since it never initiated the main analysis, there was no return to the primary objective.\n\nOverall, while the assistant maintained focus and laid out a reasonable plan, it failed to execute the requested analysis, comparison, and discrepancy summary. Proceeding proactively with PatientHistory retrieval and delivering at least the CXR AI analysis and report comparison (while clarifying CT limitations) would have significantly improved task completion."
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "score": 3,
            "explanation": "Rating: 3\n\nExplanation:\n- The assistant stayed focused on the user\u2019s main objective\u2014preparing a tumor board for patient_4\u2014and laid out a clear, structured plan with logical steps (history, status, guidelines, trials, radiology, report).\n- It asked relevant clarifying questions (confirm plan, availability of imaging/pathology files, focus areas, deadline/format), which are appropriate for this task and showed good orchestration intent.\n- It established a useful protocol for agent handoffs (\u201cback to you: Orchestrator\u201d), indicating foresight in coordination and maintaining control of the workflow.\n- However, it did not begin executing the main task (e.g., retrieving PatientHistory or assembling any preliminary content) and therefore did not progress toward completion beyond planning. It could have proactively initiated retrieval of available data while awaiting optional uploads or preferences, then iteratively updated.\n- No side tasks arose, so there was no distraction, but the lack of action beyond planning limits task completion at this stage.\n\nOverall, the assistant maintained focus and set up the workflow well but did not yet advance the core deliverable, resulting in an average score."
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "score": 2,
            "explanation": "Rating: 2\n\nThe assistant remained focused on the user\u2019s objective and laid out a clear, reasonable plan, including agent roles, limitations (no CT analysis capability), and next steps. It also proactively requested necessary inputs (image links/files) and asked for confirmation to proceed, which shows good coordination.\n\nHowever, it did not complete the primary task. No images were analyzed, no radiologist reports were retrieved or compared, and no discrepancies or additional findings were summarized. While the assistant appropriately highlighted tool limitations for CT and proposed a report-only summary as a workaround, it did not execute even the parts it could (e.g., initiating retrieval via PatientHistory or running the CXR AI analysis) before asking for confirmation. There were no side tasks to handle, so focus maintenance was acceptable, but the lack of tangible progress toward the requested analysis keeps the rating low."
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": "patient_4",
          "result": {
            "score": 4,
            "explanation": "Rating: 4\n\nExplanation:\n- The system maintained clear focus on the user\u2019s objective throughout: explaining the benefits, risks, and prognosis impact of transitioning to adagrasib for a KRAS p.G12C mutation. It laid out a structured plan, provided micro-updates, and consistently tied side activities back to the main goal.\n- It successfully handled side tasks:\n  - When the patient record was initially unavailable, it pivoted to a general evidence summary that directly addressed benefits, risks, and potential prognosis changes, covering NSCLC and CRC contexts.\n  - It attempted a comparative evidence query (adagrasib vs sotorasib); when the tool failed, it reported the issue and deferred without derailing the workflow.\n  - It then gathered detailed patient-specific data (timeline, ECOG, CNS status, labs, meds) to enable a tailored response.\n- It addressed all parts of the question in the general overview, including efficacy metrics, safety profile, and how prognosis might change, which partially completes the main task.\n- Focus maintenance was strong: after the GraphRAG failure and patient data retrieval, the orchestrator clearly returned to the main objective, instructing PatientStatus to compile a structured status and planning to proceed to ClinicalGuidelines for a tailored benefits/risks/prognosis discussion.\n- The main shortcoming is task completion: the conversation ended before delivering the patient-tailored ClinicalGuidelines answer. Given the available patient details (KRAS G12C NSCLC post-chemo/IO progression, ECOG 1, no brain mets documented, normal LFT/renal function, QTc not documented, meds with QT risk), the system could have provided at least a brief tailored summary before termination to fully complete the task.\n- Overall, this was a good execution with strong focus and side task handling, but not fully complete patient-specific output by the end."
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": "patient_4",
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        }
      ]
    },
    "information_integration": {
      "average_score": 0,
      "num_evaluations": 0,
      "num_errors": 66,
      "results": [
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": "patient_4",
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "21f2e08161ef6e94c4b7835c02b8060bf534659c2109be987f2c113a3f397c11",
          "patient_id": "patient_4",
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "36b80ac0b92652114de1caa77d2c7f4675883c2804aa55eee09dfa9ad6192ccc",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "42b4335c914b50509e2a9c24f1fb2fae79008659a0dd713eacd1996e75c45bc9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "47213c5b9fec4f7b73488d8a3946a311647dbf57686acb4a2d0caf31b4ebe2e8",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "58f867094389ecaee51d23c0750143367b047cca4f6b1b75c2d49e3be011faf5",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "5bcd96f077e8c6ea69f918c322ea08d6fa6883cd582767b4fbbec1b9b3a2c6da",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "73f20bda74b228192e05cefe81390cc261cb04ce3b2eb583e2fd081be019439d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7be0cf5440d61998b296ebc8fa4c5bc366ef66b7b5a135078f98f7743b8b1fff",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "7c55a7ae0471b85c2d7dbe3643a0630950c5b3829e4426e8d0055ca0a022cc8e",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "849cfa6b3c70b898e0c2c85487986bf8b22d69d93b953f50c75c4e2b15de2e27",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "861825ec7157d5a2df170019304817c389f4818043eb5c8a2e32782e8a7dd8e9",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "887f9860cd085d142c3a834e89dbb58d59378d1481aa82066cad112730bd75b3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a6579bfa0acc3910cbb8a256d0a4a890cbd851c667b599271f8c87cd453a9f0c",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "a9b24f44837a4609669ab7f0d6a247bd6b74b858fa835f9aaa5d774ef8e8ae54",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "ab7dd9456a5873fbf29ca9eabc588d00fa1c6992b411ae5ce9507aa6cd213a04",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "af6182d712a1cd3f681cb86f7b6ddaa823ca53134c43a9da1cf5ab8887eb56c3",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "b514664201ad62fb2374e0e2af3aa32722150c70076ba619e929ea31ca15af0d",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "c185f2b7500bfe2e0d986b386a3a3bf15ac5cffeb4b0c8ee2dfbbb7457cdbf5b",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "de2688a08c54fc5fb20153fe317306f4afe97f62a11bde77128dcb1cf1127bd0",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "deff3e7d8679be7d21747979015280b17d52cea4ed5b4a3255434751ca425de4",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "e5263f1b7eec3857135622687a37519ed04d9c95be491f86b0fd9746fee46463",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        },
        {
          "id": "f56d2235796a9ce93e6610046c33dbfef1f650f0722301cac6378cce5d0afa8f",
          "patient_id": null,
          "result": {
            "error": "(\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))",
            "trace": "Traceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 87, in _send_completion_request\n    response = await self.client.chat.completions.create(**settings_dict)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\resources\\chat\\completions\\completions.py\", line 2583, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1794, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\openai\\_base_client.py\", line 1594, in request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\evaluator.py\", line 215, in _evaluate\n    evaluation_results = await metric.evaluate(\n                         ^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 411, in evaluate\n    return await self._evaluate_content(chat_history)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\notebooks\\evaluations\\../../src\\evaluation\\metrics\\base.py\", line 431, in _evaluate_content\n    response = await self.evaluation_llm_service.get_chat_message_content(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 190, in get_chat_message_content\n    results = await self.get_chat_message_contents(chat_history=chat_history, settings=settings, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\chat_completion_client_base.py\", line 134, in get_chat_message_contents\n    return await self._inner_get_chat_message_contents(chat_history, settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\utils\\telemetry\\model_diagnostics\\decorators.py\", line 112, in wrapper_decorator\n    return await completion_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_chat_completion_base.py\", line 88, in _inner_get_chat_message_contents\n    response = await self._send_request(settings)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 59, in _send_request\n    return await self._send_completion_request(settings)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\lukasmatzi\\Documents\\projects\\repos\\healthcare-agent-orchestrator\\.gpt5-venv\\Lib\\site-packages\\semantic_kernel\\connectors\\ai\\open_ai\\services\\open_ai_handler.py\", line 104, in _send_completion_request\n    raise ServiceResponseException(\nsemantic_kernel.exceptions.service_exceptions.ServiceResponseException: (\"<class 'semantic_kernel.connectors.ai.open_ai.services.azure_chat_completion.AzureChatCompletion'> service failed to complete the prompt\", AuthenticationError(\"Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com or https://ai.azure.com), or have expired.'}\"))\n"
          }
        }
      ]
    }
  }
}